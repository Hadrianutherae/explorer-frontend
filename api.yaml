openapi: 3.0.0

info:
  version: 1.0.0
  title: Blockchain explorer

tags:
  - name: blocks
    description: Everything about blocks
  - name: transactions
    description: Everyting about transactions
  - name: addresses
    description: Everything about addresses
  - name: statistics
    description: Blockchain status information
  - name: charts
    description: Get data for charts

paths:
  /blocks:
    get:
      tags:
        - blocks
      summary: Get list of blocks
      description: Get list of blocks sorted by height
      parameters:
        - name: offset
          in: query
          description: Offset
          schema:
            type: integer
        - name: limit
          in: query
          description: Limit
          schema:
            type: integer
        - name: sortBy
          in: query
          description: Sorted column
          schema:
            type: string
            enum: [height, timestamp, transactionsCount, size, votes, miner]
        - name: sortDirection
          in: query
          description: Sort direction
          schema:
            type: string
            enum: [asc, desc]
        - name: query
          in: query
          description: Search query
          schema:
            type: string
      operationId: listBlocks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                  - total
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/SearchBlock'
                  total:
                    description: Total number of blocks
                    type: integer
                    example: 13949294
  '/blocks/{id}':
    parameters:
      - name: id
        required: true
        in: path
        schema:
          $ref: '#/components/schemas/ModifierId'
    get:
      summary: Get block by id
      tags:
        - blocks
      responses:
        '200':
          description: Ok
          content:
            'application/json':
              schema:
                type: object
                properties:
                  block:
                    $ref: '#/components/schemas/FullBlock'
                  references:
                    type: object
                    properties:
                      nextId:
                        $ref: '#/components/schemas/ModifierId'
                      previousId:
                        $ref: '#/components/schemas/ModifierId'
  '/transactions/{id}':
    parameters:
      - name: id
        required: true
        in: path
        schema:
          $ref: '#/components/schemas/ModifierId'
    get:
      summary: Get transction by id
      tags:
        - transactions
      responses:
        '200':
          description: Ok
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/FullTransaction'

  '/addresses/{id}':
    parameters:
      - name: id
        description: Address ID
        required: true
        in: path
        schema:
          $ref: '#/components/schemas/AddressId'
    get:
      summary: Get address by id
      tags:
        - addresses
      responses:
        '200':
          description: Ok
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/FullAddress'
  '/addresses/{id}/transactions':
    parameters:
      - name: id
        description: Address ID
        required: true
        in: path
        schema:
          $ref: '#/components/schemas/AddressId'
    get:
      summary: Get transactions related to address
      tags:
        - addresses
      parameters:
        - name: offset
          in: query
          description: Offset
          schema:
            type: integer
        - name: limit
          in: query
          description: Limit
          schema:
            type: integer
      responses:
        '200':
          description: Ok
          content:
            'application/json':
              schema:
                description: Anyone can spend transaction objects
                type: array
                items:
                  $ref: '#/components/schemas/AnyoneCanSpendTransaction'


  '/info':
    get:
      summary: Get blockchain info
      tags:
        - statistics
      responses:
        '200':
          description: Ok
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/BlockchainInfo'
  '/stats':
    get:
      summary: Get blockchain stats
      tags:
        - statistics
      responses:
        '200':
          description: Ok
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/BlockchainStats'

  '/charts/total':
    get:
      summary: Get total coins per date
      tags:
        - charts
      parameters:
        - name: timespan
          in: query
          description: Timespan
          schema:
            $ref: '#/components/schemas/Timespan'

      responses:
        200:
          description: 'Ok'
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: object
                  properties:
                    timestamp:
                      $ref: '#/components/schemas/Timestamp'
                    value:
                      description: Number of coins
                      type: integer
                      format: int32

  '/charts/market-price':
    get:
      summary: Get market price per date
      tags:
        - charts
      parameters:
        - name: timespan
          in: query
          description: Timespan
          schema:
            $ref: '#/components/schemas/Timespan'
      responses:
        200:
          description: 'Ok'
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: object
                  properties:
                    timestamp:
                      $ref: '#/components/schemas/Timestamp'
                    value:
                      description: Price
                      type: integer
                      format: float
                      example: 3001.34

  '/charts/block-size':
    get:
      summary: Get average block size per date
      tags:
        - charts
      parameters:
        - name: timespan
          in: query
          description: Timespan
          schema:
            $ref: '#/components/schemas/Timespan'

      responses:
        200:
          description: 'Ok'
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: object
                  properties:
                    timestamp:
                      $ref: '#/components/schemas/Timestamp'
                    value:
                      description: Average block size in bytes
                      type: integer
                      format: int32

components:
  schemas:
    AnyoneCanSpendTransactionInput:
      type: object
      required:
        - id
        - nonce
        - signature
      properties:
        id:
          $ref: '#/components/schemas/TransactionId'
        nonce:
          description: Index of a output in transaction
          type: integer
          format: int32
          minimum: 0
          example: 667
        signature:
          description: The parameter that should be successfully executed the script of the output of the transaction
          type: string

    AnyoneCanSpendTransactionOutput:
      type: object
      required:
        - id
        - value
        - script
      properties:
        id:
          $ref: '#/components/schemas/TransactionId'
        value:
          description: Amount of Ergo token
          type: number
          minimum: 0
          example: 14.7
        script:
          description: The script which should be successfully executed for the waste of this output
          type: string
    AnyoneCanSpendTransaction:
      type: object
      description: Transaction without any lockers and unlockers
      required:
        - id
        - inputs
        - outputs
      properties:
        id:
          $ref: '#/components/schemas/TransactionId'
        inputs:
          description: Many transaction inputs
          type: array
          items:
            $ref: '#/components/schemas/AnyoneCanSpendTransactionInput'
        outputs:
          description: Many transaction outputs
          type: array
          items:
            $ref: '#/components/schemas/AnyoneCanSpendTransactionOutput'
    FullBlock:
      description: Block with header and transactions
      type: object
      required:
        - header
        - blockTransactions
        - adProofs
      properties:
        header:
          $ref: '#/components/schemas/BlockHeader'
        blockTransactions:
          $ref: '#/components/schemas/BlockTransactions'
        adProofs:
          $ref: '#/components/schemas/BlockADProofs'

    SearchBlock:
      description: Block for search results
      type: object
      required:
        - height
        - timestamp
        - transactionsCount
        - miner
        - size
        - votes
      properties:
        id:
          $ref: '#/components/schemas/ModifierId'
        height:
          type: integer
          format: int32
          minimum: 0
          example: 667
        timestamp:
          type: integer
          format: int32
          example: 1501505945003
        transactionsCount:
          type: integer
          format: int32
          minimum: 0
          example: 667
        miner:
          $ref: '#/components/schemas/Miner'
        size:
          type: integer
          format: int32
          description: Size of block in bytes
          minimum: 0
          example: 1030453
        votes:
          $ref: '#/components/schemas/Votes'

    Miner:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/AddressId'
        name:
          type: string
          example: 'BTC.com'

    BlockHeader:
      type: object
      required:
        - id
        - timestamp
        - reference
        - version
        - interlinks
        - adProofsRoot
        - stateRoot
        - transactionsRoot
        - nBits
        - votes
        - nonce
        - equihashSolutions
        - height
      properties:
        id:
          $ref: '#/components/schemas/ModifierId'
        timestamp:
          type: integer
          format: int32
          example: 1501505945003
        reference:
          $ref: '#/components/schemas/ModifierId'
        version:
           type: integer
           format: int32
           example: 2
        interlinks:
          # todo better description
          description: Interlinks
          type: array
          items:
            $ref: '#/components/schemas/Digest32'
        adProofsRoot:
          $ref: '#/components/schemas/Digest32'
        stateRoot:
          $ref: '#/components/schemas/ADDigest'
        transactionsRoot:
          $ref: '#/components/schemas/Digest32'
        nBits:
          # todo actually it is unsigned int?
          type: integer
          format: int64
          example: 19857408
        votes:
          $ref: '#/components/schemas/Votes'
        nonce:
          type: integer
          format: int32
          example: 324573
        equihashSolutions:
          description: Base58-encoded equihash solutions
          type: string
          example: 11M1yYZ6GLUJJXWmBSsSiZ412y8SLWEh68WwynR77ykcoEr1QxnEWYPdTSbi7qLbHrZhGkQsQgyW3PqrZVAXtBXEZvravSZwm5rWZZorGotNXA8ZKXgwnbDAh24ZjZCcwk8SQ2zdPn7vCiL7AvQppeuqaM2NQPjsE92bCtpgqnbkh
        height:
          type: integer
          format: int32
          minimum: 0
          example: 667

    BlockTransactions:
      type: object
      required:
        - headerId
        - transactions
      properties:
        headerId:
          $ref: '#/components/schemas/ModifierId'
        transactions:
          description: Anyone can spend transaction objects
          type: array
          items:
            $ref: '#/components/schemas/AnyoneCanSpendTransaction'

    FullTransaction:
      type: object
      required:
        - summary
        - io
      properties:
        summary:
          $ref: '#/components/schemas/TransactionSummary'
        inputs:
          description: Many transaction inputs
          type: array
          items:
            $ref: '#/components/schemas/AnyoneCanSpendTransactionInput'
        outputs:
          description: Many transaction outputs
          type: array
          items:
            $ref: '#/components/schemas/AnyoneCanSpendTransactionOutput'

    TransactionSummary:
      type: object
      required:
        - id
        - timestamp
        - size
        - confirmationCount
        - blocks
      properties:
        id:
          $ref: '#/components/schemas/TransactionId'
        timestamp:
          description: Transction time in seconds
          type: integer
          format: int32
          example: 1501505945003
        size:
          description: Size of transcaction in KB
          type: number
          format: float
          example: 4390.12
        confirmationsCount:
          description: Number of confimations in transaction
          type: integer
          format: int32
          example: 142
        blocks:
          type: array
          items:
            type: object
            properties:
              headerId:
                $ref: '#/components/schemas/ModifierId'
              height:
                description: Block height
                type: integer
                format: int32
                minimum: 0
                example: 667

    FullAddress:
      type: object
      required:
        - summary
        - transactions
      properties:
        summary:
          type: object
          required:
            - id
          properties:
            id:
              $ref: '#/components/schemas/AddressId'
        transactions:
          type: object
          required:
            - total
          properties:
            total:
              type: integer
              format: int32
              description: Total number of transactions
              example: 2341
            totalReceived:
              type: number
              description: Total recieved coins
              example: 10455323.23
            balance:
              type: number
              description: Final balance
              example: 1123.42
    BlockchainInfo:
      type: object
      required:
        - version
        - supply
        - marketCap
        - transactionAverage
        - hashRate
      properties:
        version:
          type: string
          description: Software version
          example: '1.0.0'
        supply:
          type: integer
          description: Circulating supply
          example: 1000003
        marketCap:
          type: integer
          description: Market Capitalization
          example: 10003243
        transactionAverage:
          type: integer
          description: Transaction per day
          example: 100302
        hashRate:
          type: integer
          format: int32
          description: Hashrate
          example: 415434144

    BlockchainStats:
      type: object
      properties:
        blockSummary:
          type: object
          properties:
            total:
              type: integer
              description: Number of mined blocks
              example: 12030
            averageMiningTime:
              type: integer
              format: int32
              example: 43201
              description: Time between blocks in ms
            totalCoins:
              type: number
              format: int32
              example: 238193891032
              description: Total mined coins
        transactionSummary:
          type: object
          properties:
            total:
              type: integer
              description: Number of transactions


    BlockADProofs:
      type: object
      required:
        - headerId
        - proofBytes
        - digest
      properties:
        headerId:
          $ref: '#/components/schemas/ModifierId'
        proofBytes:
          $ref: '#/components/schemas/SerializedAdProof'
        digest:
          $ref: '#/components/schemas/Digest32'

    TransactionId:
      description: Base16-encoded transaction id bytes
      type: string
      example: 141cef0ed1e1cbd3bdf2da2d39fb9a0e697b8777012b169609eb76313506ef66

    AddressId:
      description: Base16-encoded address id bytes
      type: string
      example: 141cef0ed1e1cbd3bdf2da2d39fb9a0e697b8777012b169609eb76313506ef66

    ModifierId:
      description: Base58-encoded 32 byte modifier id
      type: string
      example: D2bXMwWN8P9nWJ9qqwZJLauAdcZHX9n6s91QQ9vK6Zu4

    Digest32:
      description: Base58-encoded 32 byte digest
      type: string
      example: FjX5cPuwMc2ocDLPWzt6jq29BXjvU6d5w5XURDJ6dmoM

    ADDigest:
      description: Base58-encoded 33 byte digest - digest with extra byte with tree height
      type: string
      example: FjX5cPuwMc2ocDLPWzt6jq29BXjvU6d5w5XURDJ6dmoM

    SerializedAdProof:
      description: Base58-encoded ad proofs
      type: string
      example: DpvhNdDszrCDm1qmwFXmxaiz4bgEG19dGVhBaYsofV93BwmFofbnFQ7kNwnDSvptb1NGBmi6GtrFyacj8hBWNueRHVCyctAJE2sSoNxVQiSJEqRaa5NFp3DACG16RPvDDgbG8qZ1kNdfZhK9S6q77LwYhPbzYL2s2x7uzScQdccw4HR68mogEgBXomAXuisJyy4indYfCdEZmFHPELn9Md9F4SGu9BpAKYMUjEwkRKt7Ype8M6MHKFuxiVCTTq2fLC8FVUeSJLDM7BVaZtLctaeuZ3LR3sx1tog7daXTAjsXWYZXvqUVs1qynXvJZnFuAN5wLoynnN7YVahHRGQk9sUQaxtPbt7L5qzBzooXedE9LFssvU9zV3KNM2PkbpaHdAu7tJHWoTNyCzZuR2JqSfnpSDkXhZCQhRB7m7vbGzokZ7DcGwtNUxBr7HdEdEUQLRmpHbLqjL82zZuYvykUyPZwCnphaKku7RW3f3BDk3DReCeFBPZkYkoEJFHe9mCAAM5WD44vtTeNokuMrtUbvUgnUFpBnyJsQf7WHAiFsBbRjZwjgoyUYKJCSLSqp3QwoGW5sSXmGvwG9peFFB3yb6gGdDLJqTx2zTqh3znPpK9S5ePGPdCcmbnNKh1pxqnARhDB8xC7eG6Edvhwh7Nx1sSDHXo8xp3hWUdFT4APK16Wr8KNa4xEKuh9mkb31AQhCuD8GsyRaW9oGdJKtZnwrYeBWGrDQ9c99PG2yyA7JzDcvdALdH7Z7T4pd57KFn4VTdJrT6tqwJPh3wERgQFUUEQ2grpxBg8ZMZy1YEzLu1MnJJVvvx66efK1GPytK4n1hKs3pogMW2Fxi5zbLean7k9Fj6VGcbFKGbJPqzhTr3TW6ywNsBmh7ntSmrV3k45RxWb4KWJByiy25xkQg57qyij71F2vzZgTs3kRVVMS4asE8r3qLiA4w8QKfay7JWC9XVuRJQwMPPeVNRfJP7kK1giZhZahzbCFKLcuP6ShzxBzZmTzhRGuF3HtsbtWawv21czEANc6cV6ymyrics3jtMizGwwAcUcasToNuBih34HhspF65HnR5gKZqqHwkbugeDCpDYieAQzwTLzd52ocdJp98dvHU1SWAGdKaeqhF75FiijZebKb3mQiPMTFj2PMwSTjttarPwpEdEwRLxGPezvCUdq7rJAoZJbszaCBnTDjHjqsv5UiyLXr7gM9uyzMX9GMwTnrWYrEwYAD2Yih4b9mvtMdDeZ1mfJsT9r47xLPqgyxbd232U8pu28JbUrrfpZ2mZARTsXzYsuFQusnbzCo72PWNUvceTXh5f5TFhMbmCydcrfCyM3JFV2FrxwNKFKdFvdppAGXGKwhk5cB4

    Votes:
      description: Base58-encoded votes array
      type: string
      example: AcRpicD

    Timestamp:
      description: Date in seconds
      type: integer
      format: int32
      example: 1525686982094

    Timespan:
      description: Timespan for charts
      type: string
      enum: ['all', '7days', '30days', '60days', '180days', '1year', '2years']
