{"version":3,"sources":["components/api/api-type/api-type.component.tsx","components/api/api-params/api-params.component.tsx","components/api/api-response/api-response.component.tsx","components/api/api-path/api-path.component.tsx","pages/api/api.component.tsx"],"names":["ApiTypeComponent","className","this","props","schema","type","enum","join","React","PureComponent","ApiParamsComponent","params","map","param","key","name","required","in","description","ApiResponseComponent","code","Object","keys","response","content","JSON","stringify","getExample","properties","forEach","property","push","items","example","ApiPathComponent","state","isOpen","toggleMenu","setState","paths","path","index","onClick","pathName","operationId","parameters","responses","responseCode","responseIndex","Api","data","getApi","id","title","environment","blockchain","coinName","info","version","apiUrl","ApiComponent","connect","api","dispatch","bindActionCreators","ApiActions"],"mappings":"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","file":"static/js/16.ead41b7d.chunk.js","sourcesContent":["import React from 'react';\n\nimport './api-type.scss';\n\ninterface IApiTypeProps {\n  schema: any;\n}\n\nexport class ApiTypeComponent extends React.PureComponent<IApiTypeProps> {\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-api-type\">\n        <span className=\"bi-api-type__type\">{this.props.schema.type}</span>\n\n        {this.props.schema.enum && (\n          <div className=\"bi-api-type__enum\">\n            {this.props.schema.enum.join(', ')}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { ApiTypeComponent } from '../api-type/api-type.component';\n\nimport './api-params.scss';\n\ninterface IApiParamsProps {\n  params: any[];\n}\n\nexport class ApiParamsComponent extends React.PureComponent<IApiParamsProps> {\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-api-params\">\n        <div className=\"bi-api-params__header\">Parameters</div>\n\n        <div className=\"bi-table\">\n          {this.props.params.map((param) => {\n            return (\n              <div\n                className=\"bi-api-params__param bi-table__row\"\n                key={param.name}\n              >\n                <div className=\"bi-api-params__name bi-table__cell\">\n                  {param.name}\n                  {param.required && (\n                    <span className=\"bi-api-params__required\">*</span>\n                  )}\n\n                  <span className=\"bi-api-params__in\">{param.in}</span>\n                </div>\n\n                <div className=\"bi-table__cell\">\n                  {param.description || 'Parameter description is empty'}\n                </div>\n\n                <div className=\"bi-table__cell\">\n                  <ApiTypeComponent schema={param.schema} />\n                </div>\n\n                <div className=\"bi-table__cell\">\n                  {param.schema.description || 'Schema description is empty'}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport './api-response.scss';\n\ninterface IApiResponseProps {\n  code: string;\n  response: any;\n}\n\nexport class ApiResponseComponent extends React.PureComponent<\n  IApiResponseProps\n> {\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-api-response\">\n        <div className=\"bi-api-response__header\">\n          Response {this.props.code}\n        </div>\n        <div className=\"bi-api-response__body\">\n          {Object.keys(this.props.response.content).map((key) => {\n            return (\n              <pre key={key} className=\"bi-api-response__example g-scroll-y\">\n                {JSON.stringify(\n                  this.getExample(this.props.response.content[key].schema),\n                  null,\n                  2\n                )}\n              </pre>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  private getExample(schema: any): any {\n    let response: any;\n\n    switch (schema.type) {\n      case 'object': {\n        response = {};\n\n        if (!schema.properties) {\n          break;\n        }\n\n        Object.keys(schema.properties).forEach((property: string) => {\n          response[property] = this.getExample(schema.properties[property]);\n        });\n\n        break;\n      }\n\n      case 'array': {\n        response = [];\n\n        response.push(this.getExample(schema.items));\n\n        break;\n      }\n\n      case 'string': {\n        response = schema.example || schema.type || '';\n\n        break;\n      }\n\n      case 'integer':\n      case 'float':\n      case 'number': {\n        response = schema.example || 0;\n        break;\n      }\n\n      default: {\n        response = schema.type;\n      }\n    }\n\n    return response;\n  }\n}\n","import React from 'react';\n\nimport { ApiParamsComponent } from '../api-params/api-params.component';\nimport { ApiResponseComponent } from '../api-response/api-response.component';\n\nimport './api-path.scss';\nimport { AngleIcon } from 'src/components/common/icons/common.icons';\n\ninterface IApiPathProps {\n  pathName: string;\n  paths: any[];\n}\n\nexport class ApiPathComponent extends React.PureComponent<IApiPathProps> {\n  state = {\n    isOpen: false,\n  };\n\n  toggleMenu = () => this.setState({ isOpen: !this.state.isOpen });\n\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-api-path\">\n        {Object.keys(this.props.paths).map((path: any, index) => {\n          return (\n            <div className=\"bi-api-path__item\" key={index}>\n              <div\n                className=\"bi-api-path__item-header\"\n                onClick={() => this.toggleMenu()}\n              >\n                <span className=\"bi-api-path__type\">{path}</span>\n                <span className=\"bi-api-path__pathname\">\n                  {this.props.pathName}\n                </span>\n                <span className=\"bi-api-path__summary\">\n                  {this.props.paths[path].operationId}\n                </span>\n                <div\n                  className={`bi-api-path__icon ${\n                    this.state.isOpen ? '' : 'bi-api-path__icon--open'\n                  }`}\n                >\n                  <AngleIcon />\n                </div>\n              </div>\n\n              {this.state.isOpen && (\n                <div className=\"bi-api-path__item-body\">\n                  {this.props.paths[path].parameters && (\n                    <div className=\"bi-api-path__params\">\n                      <ApiParamsComponent\n                        params={[...(this.props.paths[path].parameters || [])]}\n                      />\n                    </div>\n                  )}\n\n                  {Object.keys(this.props.paths[path].responses).map(\n                    (responseCode, responseIndex) => {\n                      return (\n                        <ApiResponseComponent\n                          key={responseIndex}\n                          code={responseCode}\n                          response={\n                            this.props.paths[path].responses[responseCode]\n                          }\n                        />\n                      );\n                    }\n                  )}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport environment from '../../config/environment';\n\nimport { ApiState } from '../../reducers/api.reducer';\nimport { AppState } from '../../store/app.store';\n\nimport { ApiActions } from '../../actions/api.actions';\n\nimport './api.scss';\nimport { ApiPathComponent } from '../../components/api/api-path/api-path.component';\n\nclass Api extends React.PureComponent<ApiState & ApiActions> {\n  componentDidMount(): void {\n    if (!this.props.data) {\n      this.props.getApi();\n    }\n  }\n\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-api\">\n        <FormattedMessage id=\"common.pages.api.title\">\n          {(title) => (\n            <Helmet>\n              <title>{title}</title>\n            </Helmet>\n          )}\n        </FormattedMessage>\n\n        {this.props.data && (\n          <div className=\"bi-api__header\">\n            <div className=\"bi-api__title\">\n              {environment.blockchain.coinName} Explorer{' '}\n              {this.props.data && this.props.data.info.version}\n            </div>\n\n            {environment.apiUrl}\n          </div>\n        )}\n\n        {this.props.data && (\n          <div className=\"bi-api__body\">\n            {Object.keys(this.props.data.paths).map((path) => {\n              return (\n                <ApiPathComponent\n                  key={path}\n                  pathName={path}\n                  paths={this.props.data.paths[path]}\n                />\n              );\n            })}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: AppState): ApiState {\n  return state.api;\n}\n\nfunction mapDispatchToProps(dispatch: any): any {\n  return bindActionCreators(ApiActions, dispatch);\n}\n\nexport const ApiComponent = connect(mapStateToProps, mapDispatchToProps)(Api);\n\nexport default ApiComponent;\n"],"sourceRoot":""}