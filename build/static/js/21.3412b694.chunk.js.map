{"version":3,"sources":["pages/payment-request/payment-request.component.tsx"],"names":["PaymentRequestComponent","props","input","state","copied","copyAddressToClipboard","bind","queryString","parse","this","location","search","address","amount","description","className","id","values","coinName","environment","blockchain","toUpperCase","value","size","ref","onClick","window","getSelection","selectAllChildren","selectInput","document","execCommand","removeAllRanges","setState","setTimeout","React","PureComponent"],"mappings":"qTAYqBA,G,yDASnB,WAAYC,GAA8B,IAAD,8BACvC,cAAMA,IAPRC,WAMyC,IAJzCC,MAAa,CACXC,QAAQ,GAMR,EAAKC,uBAAyB,EAAKA,uBAAuBC,KAA5B,gBAHS,E,qDAMlB,IAAD,SAC0BC,IAAYC,MACxDC,KAAKR,MAAMS,SAASC,QADdC,EADY,EACZA,QAASC,EADG,EACHA,OAAQC,EADL,EACKA,YAIzB,OACE,yBAAKC,UAAU,sBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,6BACb,kBAAC,IAAD,CAAkBC,GAAG,qCAErB,yBAAKD,UAAU,gCACb,kBAAC,IAAD,CACEC,GAAG,sCACHC,OAAQ,CACNC,SAAUC,IAAYC,WAAWF,SAASG,oBAOpD,yBAAKN,UAAU,6BACXF,EAAS,GAAKC,IACd,yBAAKC,UAAU,4BACZF,EAAS,GACR,yBAAKE,UAAU,8BACZF,EADH,IACYM,IAAYC,WAAWF,SAASG,eAG7CP,GACC,yBAAKC,UAAU,mCACb,kBAAC,IAAD,CAAkBC,GAAG,mCAAoC,IACzD,qCAAQF,EAAR,UAKR,kBAAC,IAAD,CAAQQ,MAAOV,EAASW,KAAM,MAE9B,yBAAKR,UAAU,sCACb,yBACEA,UAAU,yCACVS,IAAK,SAACA,GAAD,OAA0B,EAAKtB,MAAQsB,IAE3CZ,GAGH,4BACEG,UAAU,kDACVU,QAAShB,KAAKJ,wBAEbI,KAAKN,MAAMC,OACV,kBAAC,IAAD,CAAkBY,GAAG,sCAErB,kBAAC,IAAD,CAAkBA,GAAG,0C,oCAUhCU,OAAOC,eAA6BC,kBAAkBnB,KAAKP,S,+CAGtB,IAAD,OACrCO,KAAKoB,cAELC,SAASC,YAAY,QACpBL,OAAOC,eAA6BK,kBAErCvB,KAAKwB,SAAS,CACZ7B,QAAQ,IAGV8B,YAAW,WACT,EAAKD,SAAS,CACZ7B,QAAQ,MAET,S,GAjG8C+B,IAAMC","file":"static/js/21.3412b694.chunk.js","sourcesContent":["import QRCode from 'qrcode.react';\nimport queryString from 'query-string';\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { RouteComponentProps } from 'react-router';\n\nimport environment from '../../config/environment';\n\nimport './payment-request.scss';\n\ntype IPaymentRequestProps = RouteComponentProps<any>;\n\nexport default class PaymentRequestComponent extends React.PureComponent<\n  IPaymentRequestProps\n> {\n  input!: HTMLDivElement;\n\n  state: any = {\n    copied: false,\n  };\n\n  constructor(props: IPaymentRequestProps) {\n    super(props);\n\n    this.copyAddressToClipboard = this.copyAddressToClipboard.bind(this);\n  }\n\n  render(): JSX.Element {\n    const { address, amount, description }: any = queryString.parse(\n      this.props.location.search\n    );\n\n    return (\n      <div className=\"bi-payment-request\">\n        <div className=\"bi-payment-request__header\">\n          <div className=\"bi-payment-request__title\">\n            <FormattedMessage id=\"components.payment-request.title\" />\n\n            <div className=\"bi-payment-request__subtitle\">\n              <FormattedMessage\n                id=\"components.payment-request.subtitle\"\n                values={{\n                  coinName: environment.blockchain.coinName.toUpperCase(),\n                }}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bi-payment-request__body\">\n          {(amount > 0 || description) && (\n            <div className=\"bi-payment-request__info\">\n              {amount > 0 && (\n                <div className=\"bi-payment-request__amount\">\n                  {amount} {environment.blockchain.coinName.toUpperCase()}\n                </div>\n              )}\n              {description && (\n                <div className=\"bi-payment-request__description\">\n                  <FormattedMessage id=\"components.payment-request.for\" />{' '}\n                  <cite>«{description}»</cite>\n                </div>\n              )}\n            </div>\n          )}\n          <QRCode value={address} size={146} />\n\n          <div className=\"bi-payment-request__address g-flex\">\n            <div\n              className=\"bi-payment-request__input g-flex__item\"\n              ref={(ref: HTMLDivElement) => (this.input = ref)}\n            >\n              {address}\n            </div>\n\n            <button\n              className=\"bi-payment-request__btn-copy g-flex__item-fixed\"\n              onClick={this.copyAddressToClipboard}\n            >\n              {this.state.copied ? (\n                <FormattedMessage id=\"components.payment-request.copied\" />\n              ) : (\n                <FormattedMessage id=\"components.payment-request.copy\" />\n              )}\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private selectInput(): void {\n    (window.getSelection() as Selection).selectAllChildren(this.input);\n  }\n\n  private copyAddressToClipboard(): void {\n    this.selectInput();\n\n    document.execCommand('copy');\n    (window.getSelection() as Selection).removeAllRanges();\n\n    this.setState({\n      copied: true,\n    });\n\n    setTimeout(() => {\n      this.setState({\n        copied: false,\n      });\n    }, 1000);\n  }\n}\n"],"sourceRoot":""}