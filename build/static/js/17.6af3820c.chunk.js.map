{"version":3,"sources":["constants/struct.types.ts","utils/fetchStruct.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/address.api.service.ts","actions/address.actions.ts","selectors/addresses.ts","pages/rich-list/rich-list.component.tsx"],"names":["GET_ALL_ISSUED_TOKENS_STRUCT","GET_TOTAL_ISSUED_TOKENS_STRUCT","GET_ISSUED_TOKENS_BY_ID_STRUCT","GET_UNCONFIRMED_TRANSACTIONS_STRUCT","GET_UNCONFIRMED_TRANSACTION_STRUCT","GET_ORACLE_POOL_DATA_STRUCT","GET_ADDRESSES_BALANCES_STRUCT","defaultOpts","transformResponse","d","dispatch","fetchStruct","structId","axiosParams","opts","startStructFetch","axios","request","then","res","data","result","stopStructFetch","Promise","resolve","error","errors","Error","reject","catch","module","exports","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","value","makeInvokeMethod","fn","obj","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","__await","unwrapped","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","key","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","AddressApiService","id","get","environment","apiUrl","response","params","offset","limit","getUnconfirmed","unconfirmed","total","getConfirmed","confirmed","items","newLimit","url","AddressActions","getAddress","GET_ADDRESS","payload","GET_ADDRESS_SUCCESS","getAddressTransactions","GET_ADDRESS_TRANSACTIONS","GET_ADDRESS_TRANSACTIONS_SUCCESS","getAddressesBalances","addressesBalancesStructSelector","getStruct","connect","addressesBalances","bindActionCreators","props","console","log","useEffect","addresses","useMemo","filter","address","className","href","target","rel","map","item","to","formatNumber","integerSeparator","Number","String","balance","split"],"mappings":"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","file":"static/js/17.6af3820c.chunk.js","sourcesContent":["export const SEARCH_TOKEN_BY_ID_STRUCT = 'assets/tokenid/issuingBox';\n\nexport const UNSPENT_SELL_ORDERS_BY_TOKEN_ID_STRUCT =\n  '/dex/tokens/tokenid/unspentSellOrders';\n\nexport const UNSPENT_BUY_ORDERS_BY_TOKEN_ID_STRUCT =\n  '/dex/tokens/tokenid/unspentBuyOrders';\n\nexport const GET_ALL_ISSUED_TOKENS_STRUCT = '/assets/issuingBoxes';\n\nexport const GET_TOTAL_ISSUED_TOKENS_STRUCT = '/assets/issuingBoxes/total';\n\nexport const GET_ISSUED_TOKENS_BY_ID_STRUCT = 'assets/id:/issuingBoxes';\n\nexport const GET_UNCONFIRMED_TRANSACTIONS_STRUCT = '/transactions/unconfirmed';\n\nexport const GET_UNCONFIRMED_TRANSACTION_STRUCT =\n  '/transactions/unconfirmed/:id';\n\nexport const GET_ORACLE_POOL_DATA_STRUCT = 'oracle/frontendData';\n\nexport const GET_ADDRESSES_BALANCES_STRUCT = 'addresses/balances';\n","import { Action, Dispatch } from 'redux';\nimport { stopStructFetch, startStructFetch } from 'redux-struct';\nimport axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\n\nexport interface Struct<T, E> {\n  data?: T;\n  isFetching: boolean;\n  errors?: E;\n}\n\nexport interface StructFlowOpts<T> {\n  transformResponse?(d: T): T | Promise<T>;\n  dispatch: Dispatch<Action>;\n}\n\nconst defaultOpts: StructFlowOpts<any> = {\n  transformResponse: (d) => d,\n  dispatch: (d) => d,\n};\n\nexport const fetchStruct = <T>(\n  structId: string,\n  axiosParams: AxiosRequestConfig,\n  opts: StructFlowOpts<T> = defaultOpts\n) => {\n  const { dispatch, transformResponse } = opts;\n  dispatch(startStructFetch(structId));\n\n  return axios\n    .request({ ...axiosParams })\n    .then((res: AxiosResponse<T>) => res.data)\n    .then(transformResponse)\n    .then((result: T) => {\n      if (!result) {\n        dispatch(stopStructFetch(structId, result));\n\n        return Promise.resolve(result);\n      }\n\n      const error = (result as any).errors || (result as any).error;\n\n      if (error) {\n        dispatch(stopStructFetch(structId, new Error(error)));\n\n        return Promise.reject(new Error(error));\n      }\n\n      dispatch(stopStructFetch(structId, result));\n\n      return Promise.resolve(result);\n    })\n    .catch((error: Error) => {\n      dispatch(stopStructFetch(structId, error));\n\n      return Promise.reject(error);\n    });\n};\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { GET_ADDRESSES_BALANCES_STRUCT } from './../constants/struct.types';\nimport axios, { AxiosResponse } from 'axios';\n\nimport environment from '../config/environment';\nimport { fetchStruct } from 'src/utils/fetchStruct';\n\nexport class AddressApiService {\n  static get apiUrl(): string {\n    return `${environment.apiUrl}/addresses`;\n  }\n\n  static getAddress(id: string): any {\n    return axios\n      .get(`${environment.apiUrl}/addresses/${id}`)\n      .then((response: AxiosResponse) => {\n        if (!response) {\n          return Promise.reject(\n            `Address api service. Request: ${environment.apiUrl}/addresses/${id}.`\n          );\n        }\n\n        return response.data;\n      });\n  }\n\n  static getConfirmed(id: string, params: any) {\n    return axios\n      .get(`${environment.apiUrl}/addresses/${id}/transactions`, {\n        params,\n      })\n      .then((response: AxiosResponse) => {\n        if (!response) {\n          return Promise.reject(\n            `Address api service. Request: ${environment.apiUrl}/addresses/${id}/transactions.`\n          );\n        }\n\n        return response.data;\n      });\n  }\n\n  static getUnconfirmed(id: string, params: any) {\n    return axios\n      .get(`${environment.apiUrl}/transactions/unconfirmed/byAddress/${id}`, {\n        params,\n      })\n      .then((response: AxiosResponse) => {\n        if (!response) {\n          return Promise.reject(\n            `Address api service. Request: ${environment.apiUrl}/addresses/${id}/transactions.`\n          );\n        }\n\n        return response.data;\n      });\n  }\n\n  static async getAddressTransactions(id: string, params: any): Promise<any> {\n    const { offset, limit } = params;\n    const unconfirmed = await this.getUnconfirmed(id, { offset, limit });\n\n    if (unconfirmed.total === 0 || unconfirmed.total < offset) {\n      const confirmed = await this.getConfirmed(id, {\n        offset: offset - unconfirmed.total,\n        limit,\n      });\n\n      return {\n        items: confirmed.items,\n        total: unconfirmed.total + confirmed.total,\n      };\n    }\n\n    if (unconfirmed.items.length < limit) {\n      const newLimit = limit - unconfirmed.items.length;\n\n      const confirmed = await this.getConfirmed(id, {\n        offset: 0,\n        limit: newLimit,\n      });\n\n      return {\n        items: [...unconfirmed.items, ...confirmed.items],\n        total: unconfirmed.total + confirmed.total,\n      };\n    }\n\n    const confirmed = await this.getConfirmed(id, {\n      offset: 0,\n      limit: 1,\n    });\n\n    return {\n      items: [...unconfirmed.items],\n      total: unconfirmed.total + confirmed.total,\n    };\n  }\n\n  static getAddressesBalances(dispatch: any): any {\n    return fetchStruct(\n      GET_ADDRESSES_BALANCES_STRUCT,\n      {\n        method: 'get',\n        url: `${environment.apiUrl}/addresses/balances?limit=100`,\n      },\n      {\n        dispatch,\n      }\n    );\n  }\n}\n","import { Action, ActionCreatorsMapObject, Dispatch } from 'redux';\n\nimport {\n  GET_ADDRESS,\n  GET_ADDRESS_SUCCESS,\n  GET_ADDRESS_TRANSACTIONS,\n  GET_ADDRESS_TRANSACTIONS_SUCCESS,\n} from '../constants/address.types';\nimport { AddressApiService } from '../services/address.api.service';\n\nexport interface AddressActions extends ActionCreatorsMapObject {\n  getAddress: (id: string) => any;\n  getAddressTransactions: (id: string, params: any) => any;\n  getAddressesBalances: () => (dispatch: Dispatch<Action>) => any;\n}\n\nexport const AddressActions: AddressActions = {\n  getAddress(id: string): any {\n    return (dispatch: Dispatch<Action>) => {\n      dispatch({\n        type: GET_ADDRESS,\n      });\n\n      AddressApiService.getAddress(id).then((data: any) => {\n        dispatch({\n          payload: {\n            data,\n          },\n          type: GET_ADDRESS_SUCCESS,\n        });\n      });\n    };\n  },\n\n  getAddressTransactions(id: string, params: any): any {\n    return (dispatch: Dispatch<Action>) => {\n      dispatch({\n        type: GET_ADDRESS_TRANSACTIONS,\n      });\n\n      AddressApiService.getAddressTransactions(id, params).then((data: any) => {\n        dispatch({\n          payload: {\n            data,\n          },\n          type: GET_ADDRESS_TRANSACTIONS_SUCCESS,\n        });\n      });\n    };\n  },\n\n  getAddressesBalances() {\n    return (dispatch: any) => AddressApiService.getAddressesBalances(dispatch);\n  },\n};\n","import { getStruct } from 'redux-struct';\nimport { GET_ADDRESSES_BALANCES_STRUCT } from './../constants/struct.types';\n\nexport const addressesBalancesStructSelector = (state: any) =>\n  getStruct(GET_ADDRESSES_BALANCES_STRUCT)(state);\n","import React, { useEffect, useMemo } from 'react';\nimport './rich-list.scss';\n\nimport { connect } from 'react-redux';\nimport { addressesBalancesStructSelector } from 'src/selectors/addresses';\nimport { AddressActions } from 'src/actions/address.actions';\nimport { bindActionCreators } from 'redux';\nimport LoaderLogo from 'src/components/loader/loader';\nimport formatNumber from 'format-number';\nimport { Link } from 'react-router-dom';\n\nconst RichList = (props: any) => {\n  const { addressesBalances, getAddressesBalances } = props;\n  console.log(addressesBalances);\n  useEffect(() => {\n    getAddressesBalances();\n  }, []);\n\n  const addresses = useMemo(() => {\n    return (\n      addressesBalances.data?.items.filter(\n        ({ address }: any) =>\n          address !==\n          '2Z4YBkDsDvQj8BX7xiySFewjitqp2ge9c99jfes2whbtKitZTxdBYqbrVZUvZvKv6aqn9by4kp3LE1c26LCyosFnVnm6b6U1JYvWpYmL2ZnixJbXLjWAWuBThV1D6dLpqZJYQHYDznJCk49g5TUiS4q8khpag2aNmHwREV7JSsypHdHLgJT7MGaw51aJfNubyzSKxZ4AJXFS27EfXwyCLzW1K6GVqwkJtCoPvrcLqmqwacAWJPkmh78nke9H4oT88XmSbRt2n9aWZjosiZCafZ4osUDxmZcc5QVEeTWn8drSraY3eFKe8Mu9MSCcVU'\n      ) || []\n    );\n  }, [addressesBalances.data]);\n\n  if (!addressesBalances?.data?.items) {\n    return <LoaderLogo></LoaderLogo>;\n  }\n\n  return (\n    <div className=\"rich-list\">\n      <h1 className=\"rich-list__title\">Rich List</h1>\n      <h4 className=\"rich-list__subtitle\">\n        Want financial privacy? Use{' '}\n        <a\n          href=\"https://github.com/ergoMixer/ergoMixBack\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          ErgoMixer\n        </a>\n        !\n      </h4>\n      <div className=\"rich-list-table\">\n        <div className=\"rich-list-table__body bi-table\">\n          <div className=\"rich-list-table-header rich-list-table__row bi-table__row\">\n            <div className=\"rich-list-table__cell bi-table__cell\">Rank</div>\n\n            <div className=\"rich-list-table__cell bi-table__cell\">Quantity</div>\n\n            <div className=\"rich-list-table__cell bi-table__cell\">Address</div>\n          </div>\n\n          {addresses.map((item: any, i: number) => {\n            return (\n              <Link\n                className=\"rich-list-table__row bi-table__row\"\n                key={i + 1}\n                to={`/addresses/${item.address}`}\n              >\n                <div className=\"rich-list-table__cell bi-table__cell bi-tokens-table__cell\">\n                  <div className=\"rich-list-table__cell-name bi-tokens-table__cell-name\">\n                    Rank\n                  </div>\n\n                  {i + 1}\n                </div>\n\n                <div className=\"rich-list-table__cell bi-table__cell  bi-tokens-table__cell\">\n                  <div className=\"rich-list-table__cell-name bi-tokens-table__cell-name\">\n                    Quantity\n                  </div>\n                  <span>\n                    {formatNumber({\n                      integerSeparator: ',',\n                    })(Number(String(item.balance / 1000000000).split('.')[0]))}\n                    <span className=\"text-gray\">\n                      .\n                      {formatNumber({\n                        integerSeparator: '',\n                      })(\n                        Number(\n                          String(item.balance / 1000000000).split('.')[1] || 0\n                        )\n                      )}\n                    </span>\n                    &nbsp;ERG\n                  </span>\n                </div>\n\n                <div className=\"rich-list-table__cell bi-table__cell bi-tokens-table__cell\">\n                  <div className=\"rich-list-table__cell-name bi-tokens-table__cell-name\">\n                    Address\n                  </div>\n\n                  {item.address.slice(0, 8)}\n                </div>\n              </Link>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = (state: any) => ({\n  addressesBalances: addressesBalancesStructSelector(state),\n});\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return bindActionCreators({ ...AddressActions }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RichList);\n"],"sourceRoot":""}