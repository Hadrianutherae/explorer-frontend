{"version":3,"sources":["constants/struct.types.ts","components/common/paginate-simple/paginate-simple.component.tsx","components/common/limit-selector/limit-selector.component.tsx","utils/fetchStruct.ts","services/issuedToken.api.service.ts","actions/issuedTokens.actions.ts","selectors/issuedTokens.ts","../node_modules/rfc4648/lib/index.js","components/issued-tokens-table/issued-tokens-table/issued-tokens-table-header.component.tsx","components/issued-tokens-table/issued-tokens-table.component.tsx","pages/issued-tokens/issued-tokens.component.tsx"],"names":["SEARCH_TOKEN_BY_ID_STRUCT","UNSPENT_SELL_ORDERS_BY_TOKEN_ID_STRUCT","UNSPENT_BUY_ORDERS_BY_TOKEN_ID_STRUCT","GET_ALL_ISSUED_TOKENS_STRUCT","GET_TOTAL_ISSUED_TOKENS_STRUCT","PaginateSimpleComponent","props","pageCount","Math","ceil","this","total","limit","className","forcePage","disabled","to","getPageUrl","id","values","current","React","Component","LimitSelectorComponent","label","items","map","item","index","selectorItemClassNames","classNames","selected","key","getLimitLink","PureComponent","fetchStruct","dispatch","structId","method","url","params","startStructFetch","axios","then","res","body","data","result","stopStructFetch","Promise","resolve","error","errors","Error","reject","catch","IssuedTokensService","offset","apiUrl","environment","IssuedTokensActions","getTokens","getAllIssuedTokens","payload","type","GET_TOKENS_SUCCESS","getAllIssuedTokensStructSelector","state","getStruct","parse","string","encoding","opts","codes","i","chars","length","loose","bits","SyntaxError","end","out","Uint8Array","buffer","written","_i","value","undefined","base16Encoding","base16","toUpperCase","IssuedTokensTableHeader","IssuedTokensTableHeaderComponent","withRouter","IssuedTokensTableComponent","tokens","renderTable","token","assets","tokenId","readOnly","additionalRegisters","R4","TextDecoder","decode","format","integerSeparator","amount","R5","IssuedTokens","bind","getParams","reloadTokens","JSON","stringify","title","isFetching","floor","page","queryString","history","location","search","Object","keys","forEach","push","parseInt","IssuedTokensComponent","connect","bindActionCreators"],"mappings":"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","file":"static/js/11.3d406be9.chunk.js","sourcesContent":["export const SEARCH_TOKEN_BY_ID_STRUCT = 'assets/tokenid/issuingBox';\n\nexport const UNSPENT_SELL_ORDERS_BY_TOKEN_ID_STRUCT =\n  '/dex/tokens/tokenid/unspentSellOrders';\n\nexport const UNSPENT_BUY_ORDERS_BY_TOKEN_ID_STRUCT =\n  '/dex/tokens/tokenid/unspentBuyOrders';\n\nexport const GET_ALL_ISSUED_TOKENS_STRUCT = '/assets/issuingBoxes';\n\nexport const GET_TOTAL_ISSUED_TOKENS_STRUCT = '/assets/issuingBoxes/total';\n\nexport const GET_OPENAPI_YAML_STRUCT = '/docs/openapi';\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router-dom';\n\nimport './paginate-simple.scss';\n\nimport { ArrowIcon, DoubleArrowIcon } from '../icons/common.icons';\n\ninterface IPaginateSimpleProps {\n  total: number;\n  limit: number;\n  forcePage: number;\n  getPageUrl: (page: number) => string;\n}\n\nexport class PaginateSimpleComponent extends React.Component<\n  IPaginateSimpleProps\n> {\n  constructor(props: IPaginateSimpleProps) {\n    super(props);\n  }\n\n  render(): JSX.Element | null {\n    const pageCount = Math.ceil(this.props.total / this.props.limit);\n\n    if (!pageCount) {\n      return null;\n    }\n\n    return (\n      <div className=\"bi-paginate-simple\">\n        {this.props.forcePage === 0 ? (\n          <button\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--prev bi-btn bi-btn--flat\"\n            disabled={true}\n          >\n            <DoubleArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </button>\n        ) : (\n          <Link\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--prev bi-btn bi-btn--flat\"\n            to={this.props.getPageUrl(0)}\n          >\n            <DoubleArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </Link>\n        )}\n\n        {this.props.forcePage === 0 ? (\n          <button\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--prev bi-btn bi-btn--flat\"\n            disabled={true}\n          >\n            <ArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </button>\n        ) : (\n          <Link\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--prev bi-btn--flat\"\n            to={this.props.getPageUrl(this.props.forcePage - 1)}\n          >\n            <ArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </Link>\n        )}\n\n        <span className=\"bi-paginate-simple__status\">\n          <FormattedMessage\n            id=\"components.paginate-simple.page-of\"\n            values={{ current: this.props.forcePage + 1, total: pageCount }}\n          />\n        </span>\n\n        <span className=\"bi-paginate-simple__status bi-paginate-simple__status--mobile\">\n          <FormattedMessage\n            id=\"components.paginate-simple.page\"\n            values={{ current: this.props.forcePage + 1 }}\n          />\n        </span>\n\n        {this.props.forcePage === pageCount - 1 ? (\n          <button\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--next bi-btn bi-btn--flat\"\n            disabled={true}\n          >\n            <ArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </button>\n        ) : (\n          <Link\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--next bi-btn--flat\"\n            to={this.props.getPageUrl(this.props.forcePage + 1)}\n          >\n            <ArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </Link>\n        )}\n\n        {this.props.forcePage === pageCount - 1 ? (\n          <button\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--next bi-btn bi-btn--flat\"\n            disabled={true}\n          >\n            <DoubleArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </button>\n        ) : (\n          <Link\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--next bi-btn--flat\"\n            to={this.props.getPageUrl(pageCount - 1)}\n          >\n            <DoubleArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </Link>\n        )}\n      </div>\n    );\n  }\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './limit-selector.scss';\n\ninterface ILimitSelectorProps {\n  label: string | JSX.Element;\n  items: number[];\n  selected: number;\n  getLimitLink: (limit: number) => string;\n}\n\nexport class LimitSelectorComponent extends React.PureComponent<\n  ILimitSelectorProps\n> {\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-limit-selector\">\n        <span className=\"bi-limit-selector__label\">{this.props.label}</span>\n\n        {this.props.items.map((item, index) => {\n          const selectorItemClassNames = classNames({\n            'bi-btn': true,\n            'bi-btn--flat': true,\n            'bi-limit-selector__item': true,\n            'bi-limit-selector__item--selected': item === this.props.selected,\n          });\n\n          return (\n            <Link\n              className={selectorItemClassNames}\n              key={index}\n              to={this.props.getLimitLink(item)}\n            >\n              {item}\n            </Link>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import { stopStructFetch, startStructFetch } from 'redux-struct';\nimport axios from 'axios';\n\nexport const fetchStruct = (\n  dispatch: any,\n  structId: string,\n  method: string,\n  url: string,\n  params: any = null\n) => {\n  dispatch(startStructFetch(structId));\n\n  return axios[method](url, params)\n    .then((res: any) => res.body || res.data)\n    .then((result: any) => {\n      if (!result) {\n        dispatch(stopStructFetch(structId, result));\n\n        return Promise.resolve(result);\n      }\n\n      const error = result.errors || result.error;\n\n      if (error) {\n        dispatch(stopStructFetch(structId, new Error(error)));\n\n        return Promise.reject(new Error(error));\n      }\n\n      dispatch(stopStructFetch(structId, result));\n\n      return Promise.resolve(result);\n    })\n    .catch((error: Error) => {\n      dispatch(stopStructFetch(structId, error));\n\n      return Promise.reject(error);\n    });\n};\n","import environment from '../config/environment';\nimport { fetchStruct } from '../utils/fetchStruct';\nimport {\n  GET_ALL_ISSUED_TOKENS_STRUCT,\n  GET_TOTAL_ISSUED_TOKENS_STRUCT,\n} from '../constants/struct.types';\n\nexport class IssuedTokensService {\n  static get apiUrl(): string {\n    return `${environment.apiUrl}`;\n  }\n\n  static getAllIssuedTokens(dispatch: any, { limit, offset }: any): any {\n    return fetchStruct(\n      dispatch,\n      GET_ALL_ISSUED_TOKENS_STRUCT,\n      'get',\n      `${IssuedTokensService.apiUrl}/assets/issuingBoxes`,\n      {\n        params: {\n          limit,\n          offset,\n        },\n      }\n    );\n  }\n\n  static getTotalIssuedTokens(dispatch: any, { limit }: any): any {\n    return fetchStruct(\n      dispatch,\n      GET_TOTAL_ISSUED_TOKENS_STRUCT,\n      'get',\n      `${IssuedTokensService.apiUrl}/assets/issuingBoxes`,\n      {\n        params: {\n          limit,\n        },\n      }\n    );\n  }\n}\n","import { ActionCreatorsMapObject } from 'redux';\nimport { IssuedTokensService } from '../services/issuedToken.api.service';\nimport { GET_TOKENS_SUCCESS } from '../constants/tokens.types';\n\nexport interface IssuedTokensActions extends ActionCreatorsMapObject {\n  getTokens: (params: any) => any;\n}\n\nexport const IssuedTokensActions: IssuedTokensActions = {\n  getTokens(params: any) {\n    return (dispatch: any) =>\n      IssuedTokensService.getAllIssuedTokens(dispatch, params).then(\n        (data: any) => {\n          dispatch({\n            payload: {\n              offset: params.offset || 0,\n            },\n            type: GET_TOKENS_SUCCESS,\n          });\n        }\n      );\n  },\n};\n","import { getStruct } from 'redux-struct';\nimport {\n  GET_ALL_ISSUED_TOKENS_STRUCT,\n  GET_TOTAL_ISSUED_TOKENS_STRUCT,\n} from '../constants/struct.types';\n\nexport const getAllIssuedTokensStructSelector = (state: any) =>\n  getStruct(GET_ALL_ISSUED_TOKENS_STRUCT)(state);\n\nexport const getTotalIssuedTokensStructSelector = (state: any) =>\n  getStruct(GET_TOTAL_ISSUED_TOKENS_STRUCT)(state);\n","/* eslint-disable @typescript-eslint/strict-boolean-expressions */\nfunction parse(string, encoding, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  // Build the character lookup table:\n  if (!encoding.codes) {\n    encoding.codes = {};\n\n    for (var i = 0; i < encoding.chars.length; ++i) {\n      encoding.codes[encoding.chars[i]] = i;\n    }\n  } // The string must have a whole number of bytes:\n\n\n  if (!opts.loose && string.length * encoding.bits & 7) {\n    throw new SyntaxError('Invalid padding');\n  } // Count the padding bytes:\n\n\n  var end = string.length;\n\n  while (string[end - 1] === '=') {\n    --end; // If we get a whole number of bytes, there is too much padding:\n\n    if (!opts.loose && !((string.length - end) * encoding.bits & 7)) {\n      throw new SyntaxError('Invalid padding');\n    }\n  } // Allocate the output:\n\n\n  var out = new (opts.out || Uint8Array)(end * encoding.bits / 8 | 0); // Parse the data:\n\n  var bits = 0; // Number of bits currently in the buffer\n\n  var buffer = 0; // Bits waiting to be written out, MSB first\n\n  var written = 0; // Next byte to write\n\n  for (var _i = 0; _i < end; ++_i) {\n    // Read one character from the string:\n    var value = encoding.codes[string[_i]];\n\n    if (value === undefined) {\n      throw new SyntaxError('Invalid character ' + string[_i]);\n    } // Append the bits to the buffer:\n\n\n    buffer = buffer << encoding.bits | value;\n    bits += encoding.bits; // Write out some bits if the buffer has a byte's worth:\n\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 0xff & buffer >> bits;\n    }\n  } // Verify that we have received just enough bits:\n\n\n  if (bits >= encoding.bits || 0xff & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n\n  return out;\n}\nfunction stringify(data, encoding, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  var _opts = opts,\n      _opts$pad = _opts.pad,\n      pad = _opts$pad === void 0 ? true : _opts$pad;\n  var mask = (1 << encoding.bits) - 1;\n  var out = '';\n  var bits = 0; // Number of bits currently in the buffer\n\n  var buffer = 0; // Bits waiting to be written out, MSB first\n\n  for (var i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = buffer << 8 | 0xff & data[i];\n    bits += 8; // Write out as much as we can:\n\n    while (bits > encoding.bits) {\n      bits -= encoding.bits;\n      out += encoding.chars[mask & buffer >> bits];\n    }\n  } // Partial character:\n\n\n  if (bits) {\n    out += encoding.chars[mask & buffer << encoding.bits - bits];\n  } // Add padding characters until we hit a byte boundary:\n\n\n  if (pad) {\n    while (out.length * encoding.bits & 7) {\n      out += '=';\n    }\n  }\n\n  return out;\n}\n\n/* eslint-disable @typescript-eslint/strict-boolean-expressions */\nvar base16Encoding = {\n  chars: '0123456789ABCDEF',\n  bits: 4\n};\nvar base32Encoding = {\n  chars: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bits: 5\n};\nvar base32HexEncoding = {\n  chars: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bits: 5\n};\nvar base64Encoding = {\n  chars: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bits: 6\n};\nvar base64UrlEncoding = {\n  chars: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bits: 6\n};\nvar base16 = {\n  parse: function parse$1(string, opts) {\n    return parse(string.toUpperCase(), base16Encoding, opts);\n  },\n  stringify: function stringify$1(data, opts) {\n    return stringify(data, base16Encoding, opts);\n  }\n};\nvar base32 = {\n  parse: function parse$1(string, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    return parse(opts.loose ? string.toUpperCase().replace(/0/g, 'O').replace(/1/g, 'L').replace(/8/g, 'B') : string, base32Encoding, opts);\n  },\n  stringify: function stringify$1(data, opts) {\n    return stringify(data, base32Encoding, opts);\n  }\n};\nvar base32hex = {\n  parse: function parse$1(string, opts) {\n    return parse(string, base32HexEncoding, opts);\n  },\n  stringify: function stringify$1(data, opts) {\n    return stringify(data, base32HexEncoding, opts);\n  }\n};\nvar base64 = {\n  parse: function parse$1(string, opts) {\n    return parse(string, base64Encoding, opts);\n  },\n  stringify: function stringify$1(data, opts) {\n    return stringify(data, base64Encoding, opts);\n  }\n};\nvar base64url = {\n  parse: function parse$1(string, opts) {\n    return parse(string, base64UrlEncoding, opts);\n  },\n  stringify: function stringify$1(data, opts) {\n    return stringify(data, base64UrlEncoding, opts);\n  }\n};\nvar codec = {\n  parse: parse,\n  stringify: stringify\n};\n\nexport { base16, base32, base32hex, base64, base64url, codec };\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\n\nimport {\n  SortDirectionAscIcon,\n  SortDirectionDescIcon,\n  SortDirectionIcon,\n} from '../../common/icons/common.icons';\n\nimport './issued-tokens-table-header.scss';\n\nclass IssuedTokensTableHeader extends React.Component<\n  RouteComponentProps<any>\n> {\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-blocks-table-header bi-blocks-table__row bi-table__row\">\n        <div className=\"bi-blocks-table__cell bi-table__cell\">\n          <FormattedMessage id=\"common.token.id\" />\n\n          <SortDirectionIcon className=\"bi-blocks-table-header__sort-icon\" />\n          <SortDirectionAscIcon className=\"bi-blocks-table-header__sort-icon bi-blocks-table-header__sort-icon--asc\" />\n          <SortDirectionDescIcon className=\"bi-blocks-table-header__sort-icon bi-blocks-table-header__sort-icon--desc\" />\n        </div>\n\n        <div className=\"bi-blocks-table__cell bi-table__cell\">\n          <FormattedMessage id=\"common.token.name\" />\n\n          <SortDirectionIcon className=\"bi-blocks-table-header__sort-icon\" />\n          <SortDirectionAscIcon className=\"bi-blocks-table-header__sort-icon bi-blocks-table-header__sort-icon--asc\" />\n          <SortDirectionDescIcon className=\"bi-blocks-table-header__sort-icon bi-blocks-table-header__sort-icon--desc\" />\n        </div>\n\n        <div className=\"bi-blocks-table__cell bi-table__cell\">\n          <FormattedMessage id=\"common.token.amount\" />\n\n          <SortDirectionIcon className=\"bi-blocks-table-header__sort-icon\" />\n          <SortDirectionAscIcon className=\"bi-blocks-table-header__sort-icon bi-blocks-table-header__sort-icon--asc\" />\n          <SortDirectionDescIcon className=\"bi-blocks-table-header__sort-icon bi-blocks-table-header__sort-icon--desc\" />\n        </div>\n\n        {/* <div className=\"bi-blocks-table__cell bi-table__cell\">\n          <FormattedMessage id=\"common.token.decimals\" />\n\n          <SortDirectionIcon className=\"bi-blocks-table-header__sort-icon\" />\n          <SortDirectionAscIcon className=\"bi-blocks-table-header__sort-icon bi-blocks-table-header__sort-icon--asc\" />\n          <SortDirectionDescIcon className=\"bi-blocks-table-header__sort-icon bi-blocks-table-header__sort-icon--desc\" />\n        </div> */}\n\n        <div className=\"bi-blocks-table__cell bi-table__cell\">\n          <FormattedMessage id=\"common.token.description\" />\n\n          <SortDirectionIcon className=\"bi-blocks-table-header__sort-icon\" />\n          <SortDirectionAscIcon className=\"bi-blocks-table-header__sort-icon bi-blocks-table-header__sort-icon--asc\" />\n          <SortDirectionDescIcon className=\"bi-blocks-table-header__sort-icon bi-blocks-table-header__sort-icon--desc\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const IssuedTokensTableHeaderComponent = withRouter(\n  IssuedTokensTableHeader\n);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport format from 'format-number';\nimport { base16 } from 'rfc4648';\n// import * as vlq from 'vlq';\n\nimport { IssuedTokensTableHeaderComponent } from './issued-tokens-table/issued-tokens-table-header.component';\n\nimport './issued-tokens-table.scss';\n\ninterface IssuedTokensTableProps {\n  tokens: any[];\n  isFetching: boolean;\n}\n\nexport class IssuedTokensTableComponent extends React.Component<\n  IssuedTokensTableProps\n> {\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-blocks-table\">\n        {!this.props.tokens ? null : this.renderTable()}\n      </div>\n    );\n  }\n\n  private renderTable(): JSX.Element {\n    return (\n      <div className=\"bi-blocks-table__body bi-table\">\n        <IssuedTokensTableHeaderComponent />\n\n        {this.props.tokens.map((token) => {\n          return (\n            <div\n              className=\"bi-blocks-table__row bi-table__row\"\n              key={token.assets[0].tokenId}\n            >\n              <div className=\"bi-blocks-table__cell bi-table__cell bi-tokens-table__cell\">\n                <div className=\"bi-blocks-table__cell-name bi-tokens-table__cell-name\">\n                  <FormattedMessage id=\"common.token.id\" />\n                </div>\n\n                <input\n                  className=\"bi-tokens-table__input\"\n                  type=\"text\"\n                  value={token.assets[0].tokenId}\n                  readOnly\n                />\n              </div>\n\n              <div className=\"bi-blocks-table__cell bi-table__cell  bi-tokens-table__cell\">\n                <div className=\"bi-blocks-table__cell-name bi-tokens-table__cell-name\">\n                  <FormattedMessage id=\"common.token.name\" />\n                </div>\n\n                {token.additionalRegisters.R4 &&\n                  new TextDecoder('utf-8').decode(\n                    base16.parse(token.additionalRegisters.R4)\n                  )}\n              </div>\n\n              <div className=\"bi-blocks-table__cell bi-table__cell bi-tokens-table__cell\">\n                <div className=\"bi-blocks-table__cell-name bi-tokens-table__cell-name\">\n                  <FormattedMessage id=\"common.token.amount\" />\n                </div>\n\n                <input\n                  className=\"bi-tokens-table__input\"\n                  type=\"text\"\n                  value={format({ integerSeparator: ' ' })(\n                    token.assets[0].amount\n                  )}\n                  readOnly\n                />\n              </div>\n\n              {/* {token.additionalRegisters.R6 && (\n                <div className=\"bi-blocks-table__cell bi-table__cell bi-tokens-table__cell\">\n                  <div className=\"bi-blocks-table__cell-name bi-tokens-table__cell-name\">\n                    <FormattedMessage id=\"common.token.decimals\" />\n                  </div>\n\n                  {base16.parse('040e')}\n                </div>\n              )} */}\n\n              <div className=\"bi-blocks-table__cell bi-table__cell bi-tokens-table__cell\">\n                <div className=\"bi-blocks-table__cell-name bi-tokens-table__cell-name\">\n                  <FormattedMessage id=\"common.token.description\" />\n                </div>\n\n                {token.additionalRegisters.R5 &&\n                  new TextDecoder('utf-8').decode(\n                    base16.parse(token.additionalRegisters.R5)\n                  )}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import queryString from 'query-string';\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router';\nimport { bindActionCreators } from 'redux';\n\nimport './issued-tokens.scss';\n\nimport { AppState } from '../../store/app.store';\n\nimport { IGetBlocksParams } from '../../services/block.api.service';\n\nimport { LimitSelectorComponent } from '../../components/common/limit-selector/limit-selector.component';\nimport { PaginateSimpleComponent } from '../../components/common/paginate-simple/paginate-simple.component';\nimport { IssuedTokensActions } from '../../actions/issuedTokens.actions';\nimport { getAllIssuedTokensStructSelector } from '../../selectors/issuedTokens';\nimport { IssuedTokensTableComponent } from '../../components/issued-tokens-table/issued-tokens-table.component';\n\ntype IDataProps = AppState &\n  IssuedTokensActions &\n  RouteComponentProps<{}> & {\n    tokens: any;\n    offset: number;\n  };\n\nclass IssuedTokens extends React.PureComponent<IDataProps> {\n  params: any;\n\n  constructor(props: any) {\n    super(props);\n\n    this.getPageUrl = this.getPageUrl.bind(this);\n    this.getLimitLink = this.getLimitLink.bind(this);\n\n    this.params = this.getParams();\n  }\n\n  componentDidMount(): void {\n    this.reloadTokens(this.params);\n  }\n\n  UNSAFE_componentWillReceiveProps(props: IDataProps): void {\n    const params = this.getParams();\n\n    if (JSON.stringify(params) !== JSON.stringify(this.params)) {\n      this.params = params;\n\n      this.reloadTokens(this.params);\n    }\n  }\n\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-data g-flex-column g-flex-column__item-fixed\">\n        <FormattedMessage id=\"common.pages.issued-tokens.title\">\n          {(title) => (\n            <Helmet>\n              <title>{title}</title>\n            </Helmet>\n          )}\n        </FormattedMessage>\n\n        <div className=\"bi-data__header g-flex-column__item-fixed g-flex\">\n          <div className=\"bi-data__title g-flex__item\">\n            <FormattedMessage id=\"components.issued-tokens.title\" />\n          </div>\n        </div>\n\n        {this.props.tokens.isFetching && (\n          <p className=\"base-text\">Fetching Data...</p>\n        )}\n\n        {this.props.tokens.data && this.props.tokens.data.total === 0 && (\n          <div className=\"bi-data__body g-flex-column__item-fixed\">\n            <FormattedMessage id=\"components.data.wrong-query\" />\n          </div>\n        )}\n\n        {this.props.tokens.data !== null &&\n          this.props.tokens.data.items.length > 0 && (\n            <div className=\"bi-data__body g-flex-column__item-fixed\">\n              <IssuedTokensTableComponent\n                tokens={this.props.tokens.data.items}\n                isFetching={this.props.tokens.isFetching}\n              />\n            </div>\n          )}\n\n        {this.props.tokens.data !== null &&\n          this.props.tokens.data.items.length > 0 && (\n            <div className=\"bi-data__footer g-flex-column__item-fixed g-flex\">\n              <div className=\"g-flex__item-fixed\">\n                <LimitSelectorComponent\n                  items={[30, 60, 120]}\n                  selected={this.params.limit}\n                  label={<FormattedMessage id=\"components.data.show\" />}\n                  getLimitLink={this.getLimitLink}\n                />\n              </div>\n\n              <div className=\"g-flex__item-fixed\">\n                <PaginateSimpleComponent\n                  total={this.props.tokens.data.total}\n                  limit={this.params.limit}\n                  getPageUrl={this.getPageUrl}\n                  forcePage={Math.floor(this.props.offset / this.params.limit)}\n                />\n              </div>\n            </div>\n          )}\n      </div>\n    );\n  }\n\n  private getPageUrl(page: number): string {\n    const params: any = queryString.parse(this.props.history.location.search);\n\n    params.offset = page * this.params.limit;\n\n    return `/issued-tokens?${queryString.stringify(params)}`;\n  }\n\n  private getLimitLink(limit: number): string {\n    const params: any = queryString.parse(this.props.history.location.search);\n\n    params.limit = limit;\n\n    return `/issued-tokens?${queryString.stringify(params)}`;\n  }\n\n  private reloadTokens(params: IGetBlocksParams): void {\n    params = {\n      ...this.params,\n      ...params,\n      limit: params.limit || 30,\n      offset: params.offset || 0,\n    };\n\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null) {\n        delete params[key];\n      }\n    });\n\n    this.props.getTokens(params);\n\n    if (params.offset === 0) {\n      delete params.offset;\n    }\n\n    if (params.limit === 30) {\n      delete params.limit;\n    }\n\n    this.props.history.push(`/issued-tokens?${queryString.stringify(params)}`);\n  }\n\n  private getParams(): any {\n    let { offset, limit }: any = queryString.parse(\n      this.props.history.location.search\n    );\n\n    offset = parseInt(offset, 10);\n    limit = parseInt(limit, 10) || 30;\n\n    return {\n      limit,\n      offset: offset || 0,\n    };\n  }\n}\n\nconst mapStateToProps = (state: any): any => ({\n  tokens: getAllIssuedTokensStructSelector(state),\n  offset: state.tokens.offset,\n});\n\nconst mapDispatchToProps = (dispatch: any): any => {\n  return bindActionCreators({ ...IssuedTokensActions }, dispatch);\n};\n\nconst IssuedTokensComponent = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(IssuedTokens);\n\nexport default IssuedTokensComponent;\n"],"sourceRoot":""}