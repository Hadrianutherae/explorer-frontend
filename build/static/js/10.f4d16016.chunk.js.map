{"version":3,"sources":["constants/struct.types.ts","utils/fetchStruct.ts","components/common/paginate-simple/paginate-simple.component.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/address.api.service.ts","actions/address.actions.ts","components/modals/address-qrcode-modal/address-qrcode-modal.component.tsx","components/address/address-qrcode-action/address-qrcode-action.component.tsx","components/modals/payment-request-modal/payment-request-modal.component.tsx","components/address/address-request-payment-action/address-requets-payment-action.component.tsx","components/address/address-summary/address-summary.component.tsx","components/address/address-transactions/address-transactions.component.tsx","pages/address/address.component.tsx"],"names":["SEARCH_TOKEN_BY_ID_STRUCT","UNSPENT_SELL_ORDERS_BY_TOKEN_ID_STRUCT","UNSPENT_BUY_ORDERS_BY_TOKEN_ID_STRUCT","GET_ALL_ISSUED_TOKENS_STRUCT","GET_TOTAL_ISSUED_TOKENS_STRUCT","GET_UNCONFIRMED_TRANSACTIONS_STRUCT","GET_UNCONFIRMED_TRANSACTION_STRUCT","GET_ORACLE_POOL_DATA_STRUCT","GET_ADDRESSES_BALANCES_STRUCT","fetchStruct","dispatch","structId","method","url","params","startStructFetch","axios","then","res","body","data","result","stopStructFetch","Promise","resolve","error","errors","Error","reject","catch","PaginateSimpleComponent","props","pageCount","Math","ceil","this","total","limit","className","forcePage","disabled","to","getPageUrl","id","values","current","React","Component","asyncGeneratorStep","gen","_next","_throw","key","arg","info","value","done","AddressApiService","get","environment","apiUrl","response","fn","offset","getUnconfirmed","unconfirmed","getConfirmed","confirmed","items","length","newLimit","self","args","arguments","apply","err","undefined","AddressActions","getAddress","type","GET_ADDRESS","payload","GET_ADDRESS_SUCCESS","getAddressTransactions","GET_ADDRESS_TRANSACTIONS","GET_ADDRESS_TRANSACTIONS_SUCCESS","getAddressesBalances","AddressQrcodeModalComponent","overlayClassName","closeTimeoutMS","isOpen","onRequestClose","onClose","onClick","address","size","PureComponent","AddressQrcodeActionComponent","state","openModal","bind","closeModal","summary","stateKey","setState","PaymentRequestModal","link","amount","copied","description","setAmount","setDescription","copyLinkToClipboard","selectLink","getLink","onChange","min","blockchain","coinName","toUpperCase","ref","queryString","stringify","host","environments","window","location","origin","event","parseInt","target","getSelection","selectAllChildren","document","execCommand","removeAllRanges","setTimeout","PaymentRequestModalComponent","withRouter","AddressRequetsPaymentActionComponent","AddressSummaryComponent","AddressTransactionsComponent","totalReceived","confirmedBalance","Address","getParams","preloaded","clearPreloadedState","match","nextProps","JSON","renderBody","fetching","title","transactions","transactionFetching","floor","page","parse","history","search","pathname","connect","bindActionCreators","AppActions"],"mappings":"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","file":"static/js/10.f4d16016.chunk.js","sourcesContent":["export const SEARCH_TOKEN_BY_ID_STRUCT = 'assets/tokenid/issuingBox';\n\nexport const UNSPENT_SELL_ORDERS_BY_TOKEN_ID_STRUCT =\n  '/dex/tokens/tokenid/unspentSellOrders';\n\nexport const UNSPENT_BUY_ORDERS_BY_TOKEN_ID_STRUCT =\n  '/dex/tokens/tokenid/unspentBuyOrders';\n\nexport const GET_ALL_ISSUED_TOKENS_STRUCT = '/assets/issuingBoxes';\n\nexport const GET_TOTAL_ISSUED_TOKENS_STRUCT = '/assets/issuingBoxes/total';\n\nexport const GET_OPENAPI_YAML_STRUCT = '/docs/openapi';\n\nexport const GET_UNCONFIRMED_TRANSACTIONS_STRUCT = '/transactions/unconfirmed';\n\nexport const GET_UNCONFIRMED_TRANSACTION_STRUCT =\n  '/transactions/unconfirmed/:id';\n\nexport const GET_ORACLE_POOL_DATA_STRUCT = 'oracle/frontendData';\n\nexport const GET_ADDRESSES_BALANCES_STRUCT = 'addresses/balances';\n","import { stopStructFetch, startStructFetch } from 'redux-struct';\nimport axios from 'axios';\n\nexport const fetchStruct = (\n  dispatch: any,\n  structId: string,\n  method: string,\n  url: string,\n  params: any = null\n) => {\n  dispatch(startStructFetch(structId));\n\n  return axios[method](url, params)\n    .then((res: any) => res.body || res.data)\n    .then((result: any) => {\n      if (!result) {\n        dispatch(stopStructFetch(structId, result));\n\n        return Promise.resolve(result);\n      }\n\n      const error = result.errors || result.error;\n\n      if (error) {\n        dispatch(stopStructFetch(structId, new Error(error)));\n\n        return Promise.reject(new Error(error));\n      }\n\n      dispatch(stopStructFetch(structId, result));\n\n      return Promise.resolve(result);\n    })\n    .catch((error: Error) => {\n      dispatch(stopStructFetch(structId, error));\n\n      return Promise.reject(error);\n    });\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router-dom';\n\nimport './paginate-simple.scss';\n\nimport { ArrowIcon, DoubleArrowIcon } from '../icons/common.icons';\n\ninterface IPaginateSimpleProps {\n  total: number;\n  limit: number;\n  forcePage: number;\n  getPageUrl: (page: number) => string;\n}\n\nexport class PaginateSimpleComponent extends React.Component<\n  IPaginateSimpleProps\n> {\n  constructor(props: IPaginateSimpleProps) {\n    super(props);\n  }\n\n  render(): JSX.Element | null {\n    const pageCount = Math.ceil(this.props.total / this.props.limit);\n\n    if (!pageCount) {\n      return null;\n    }\n\n    return (\n      <div className=\"bi-paginate-simple\">\n        {this.props.forcePage === 0 ? (\n          <button\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--prev bi-btn bi-btn--flat\"\n            disabled={true}\n          >\n            <DoubleArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </button>\n        ) : (\n          <Link\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--prev bi-btn bi-btn--flat\"\n            to={this.props.getPageUrl(0)}\n          >\n            <DoubleArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </Link>\n        )}\n\n        {this.props.forcePage === 0 ? (\n          <button\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--prev bi-btn bi-btn--flat\"\n            disabled={true}\n          >\n            <ArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </button>\n        ) : (\n          <Link\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--prev bi-btn--flat\"\n            to={this.props.getPageUrl(this.props.forcePage - 1)}\n          >\n            <ArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </Link>\n        )}\n\n        <span className=\"bi-paginate-simple__status\">\n          <FormattedMessage\n            id=\"components.paginate-simple.page-of\"\n            values={{ current: this.props.forcePage + 1, total: pageCount }}\n          />\n        </span>\n\n        <span className=\"bi-paginate-simple__status bi-paginate-simple__status--mobile\">\n          <FormattedMessage\n            id=\"components.paginate-simple.page\"\n            values={{ current: this.props.forcePage + 1 }}\n          />\n        </span>\n\n        {this.props.forcePage === pageCount - 1 ? (\n          <button\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--next bi-btn bi-btn--flat\"\n            disabled={true}\n          >\n            <ArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </button>\n        ) : (\n          <Link\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--next bi-btn--flat\"\n            to={this.props.getPageUrl(this.props.forcePage + 1)}\n          >\n            <ArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </Link>\n        )}\n\n        {this.props.forcePage === pageCount - 1 ? (\n          <button\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--next bi-btn bi-btn--flat\"\n            disabled={true}\n          >\n            <DoubleArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </button>\n        ) : (\n          <Link\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--next bi-btn--flat\"\n            to={this.props.getPageUrl(pageCount - 1)}\n          >\n            <DoubleArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </Link>\n        )}\n      </div>\n    );\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { GET_ADDRESSES_BALANCES_STRUCT } from './../constants/struct.types';\nimport axios, { AxiosResponse } from 'axios';\n\nimport environment from '../config/environment';\nimport { fetchStruct } from 'src/utils/fetchStruct';\n\nexport class AddressApiService {\n  static get apiUrl(): string {\n    return `${environment.apiUrl}/addresses`;\n  }\n\n  static getAddress(id: string): any {\n    return axios\n      .get(`${environment.apiUrl}/addresses/${id}`)\n      .then((response: AxiosResponse) => {\n        if (!response) {\n          return Promise.reject(\n            `Address api service. Request: ${environment.apiUrl}/addresses/${id}.`\n          );\n        }\n\n        return response.data;\n      });\n  }\n\n  static getConfirmed(id: string, params: any) {\n    return axios\n      .get(`${environment.apiUrl}/addresses/${id}/transactions`, {\n        params,\n      })\n      .then((response: AxiosResponse) => {\n        if (!response) {\n          return Promise.reject(\n            `Address api service. Request: ${environment.apiUrl}/addresses/${id}/transactions.`\n          );\n        }\n\n        return response.data;\n      });\n  }\n\n  static getUnconfirmed(id: string, params: any) {\n    return axios\n      .get(`${environment.apiUrl}/transactions/unconfirmed/byAddress/${id}`, {\n        params,\n      })\n      .then((response: AxiosResponse) => {\n        if (!response) {\n          return Promise.reject(\n            `Address api service. Request: ${environment.apiUrl}/addresses/${id}/transactions.`\n          );\n        }\n\n        return response.data;\n      });\n  }\n\n  static async getAddressTransactions(id: string, params: any): Promise<any> {\n    const { offset, limit } = params;\n    const unconfirmed = await this.getUnconfirmed(id, { offset, limit });\n\n    if (unconfirmed.total === 0 || unconfirmed.total < offset) {\n      const confirmed = await this.getConfirmed(id, {\n        offset: offset - unconfirmed.total,\n        limit,\n      });\n\n      return {\n        items: confirmed.items,\n        total: unconfirmed.total + confirmed.total,\n      };\n    }\n\n    if (unconfirmed.items.length < limit) {\n      const newLimit = limit - unconfirmed.items.length;\n\n      const confirmed = await this.getConfirmed(id, {\n        offset: 0,\n        limit: newLimit,\n      });\n\n      return {\n        items: [...unconfirmed.items, ...confirmed.items],\n        total: unconfirmed.total + confirmed.total,\n      };\n    }\n\n    const confirmed = await this.getConfirmed(id, {\n      offset: 0,\n      limit: 1,\n    });\n\n    return {\n      items: [...unconfirmed.items],\n      total: unconfirmed.total + confirmed.total,\n    };\n  }\n\n  static getAddressesBalances(dispatch: any): any {\n    return fetchStruct(\n      dispatch,\n      GET_ADDRESSES_BALANCES_STRUCT,\n      'get',\n      `${environment.apiUrl}/addresses/balances?limit=100`\n    );\n  }\n}\n","import { Action, ActionCreatorsMapObject, Dispatch } from 'redux';\n\nimport {\n  GET_ADDRESS,\n  GET_ADDRESS_SUCCESS,\n  GET_ADDRESS_TRANSACTIONS,\n  GET_ADDRESS_TRANSACTIONS_SUCCESS,\n} from '../constants/address.types';\nimport { AddressApiService } from '../services/address.api.service';\n\nexport interface AddressActions extends ActionCreatorsMapObject {\n  getAddress: (id: string) => any;\n  getAddressTransactions: (id: string, params: any) => any;\n  getAddressesBalances: () => (dispatch: Dispatch<Action>) => any;\n}\n\nexport const AddressActions: AddressActions = {\n  getAddress(id: string): any {\n    return (dispatch: Dispatch<Action>) => {\n      dispatch({\n        type: GET_ADDRESS,\n      });\n\n      AddressApiService.getAddress(id).then((data: any) => {\n        dispatch({\n          payload: {\n            data,\n          },\n          type: GET_ADDRESS_SUCCESS,\n        });\n      });\n    };\n  },\n\n  getAddressTransactions(id: string, params: any): any {\n    return (dispatch: Dispatch<Action>) => {\n      dispatch({\n        type: GET_ADDRESS_TRANSACTIONS,\n      });\n\n      AddressApiService.getAddressTransactions(id, params).then((data: any) => {\n        dispatch({\n          payload: {\n            data,\n          },\n          type: GET_ADDRESS_TRANSACTIONS_SUCCESS,\n        });\n      });\n    };\n  },\n\n  getAddressesBalances() {\n    return (dispatch: any) => AddressApiService.getAddressesBalances(dispatch);\n  },\n};\n","import QRCode from 'qrcode.react';\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ReactModal from 'react-modal';\n\nimport { AddressId } from '../../../models/generated/addressId';\n\nimport { CrossIcon } from '../../common/icons/common.icons';\n\nimport './address-qrcode-modal.scss';\n\ninterface AddressQrcodeModalProps {\n  isOpen: boolean;\n  address: AddressId;\n  onClose: () => void;\n}\n\nexport class AddressQrcodeModalComponent extends React.PureComponent<\n  AddressQrcodeModalProps\n> {\n  render(): JSX.Element {\n    return (\n      <ReactModal\n        className=\"bi-address-qrcode-modal bi-modal bi-modal--scale\"\n        overlayClassName=\"bi-modal-overlay\"\n        closeTimeoutMS={150}\n        isOpen={this.props.isOpen}\n        onRequestClose={this.props.onClose}\n      >\n        <button className=\"bi-modal__btn-close\" onClick={this.props.onClose}>\n          <CrossIcon className=\"bi-modal__btn-close-icon\" />\n        </button>\n\n        <div className=\"bi-address-qrcode-modal__title\">\n          <FormattedMessage id=\"components.address-qr-code-modal.title\" />\n\n          <div className=\"bi-address-qrcode-modal__subtitle\">\n            <FormattedMessage id=\"components.address-qr-code-modal.subtitle\" />\n          </div>\n        </div>\n\n        <QRCode value={this.props.address} size={164} />\n      </ReactModal>\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { FullAddress } from '../../../models/generated/fullAddress';\n\nimport { QRCodeIcon } from '../../common/icons/common.icons';\n\nimport { AddressQrcodeModalComponent } from '../../modals/address-qrcode-modal/address-qrcode-modal.component';\n\nimport '../address-actions/address-actions.scss';\n\ninterface AddressActionsState {\n  [key: string]: boolean;\n}\n\ninterface AddressActionsProps {\n  address: FullAddress;\n}\n\nexport const QRCODE_MODAL_STATE_KEY = 'isQrCodeModalOpened';\n\nexport class AddressQrcodeActionComponent extends React.Component<\n  AddressActionsProps,\n  AddressActionsState\n> {\n  state: AddressActionsState = {\n    [QRCODE_MODAL_STATE_KEY]: false,\n  };\n\n  constructor(props: AddressActionsProps) {\n    super(props);\n\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-address-actions g-flex\">\n        <div className=\"bi-address-actions__item g-flex__item-fixed\">\n          <button\n            className=\"bi-address-actions__btn bi-btn\"\n            onClick={this.openModal(QRCODE_MODAL_STATE_KEY)}\n          >\n            <FormattedMessage id=\"components.address-actions.qrcode\" />\n\n            <QRCodeIcon className=\"bi-address-actions__btn-icon\" />\n          </button>\n        </div>\n\n        <AddressQrcodeModalComponent\n          isOpen={this.state[QRCODE_MODAL_STATE_KEY]}\n          onClose={this.closeModal(QRCODE_MODAL_STATE_KEY)}\n          address={this.props.address.summary.id}\n        />\n      </div>\n    );\n  }\n\n  private openModal(stateKey: string): () => void {\n    return () => {\n      this.setState({\n        [stateKey]: true,\n      });\n    };\n  }\n\n  private closeModal(stateKey: string): () => void {\n    return () => {\n      this.setState({\n        [stateKey]: false,\n      });\n    };\n  }\n}\n","import QRCode from 'qrcode.react';\nimport queryString from 'query-string';\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ReactModal from 'react-modal';\nimport { RouteComponentProps, withRouter } from 'react-router';\n\nimport environment from '../../../config/environment';\n\nimport { AddressId } from '../../../models/generated/addressId';\n\nimport { CrossIcon } from '../../common/icons/common.icons';\n\nimport './payment-request-modal.scss';\n\ntype IPaymentRequestModalProps = RouteComponentProps<any> & {\n  isOpen: boolean;\n  onClose: () => void;\n  address: AddressId;\n};\n\ninterface IPaymentRequestState {\n  amount: number;\n  copied: boolean;\n  description: string;\n}\n\nclass PaymentRequestModal extends React.PureComponent<\n  IPaymentRequestModalProps,\n  IPaymentRequestState\n> {\n  link!: HTMLDivElement;\n\n  state: IPaymentRequestState = {\n    amount: 0,\n    copied: false,\n    description: '',\n  };\n\n  constructor(props: IPaymentRequestModalProps) {\n    super(props);\n\n    this.setAmount = this.setAmount.bind(this);\n    this.setDescription = this.setDescription.bind(this);\n    this.copyLinkToClipboard = this.copyLinkToClipboard.bind(this);\n    this.selectLink = this.selectLink.bind(this);\n  }\n\n  render(): JSX.Element {\n    const link = this.getLink();\n\n    return (\n      <ReactModal\n        className=\"bi-payment-request-modal bi-modal bi-modal--scale g-scroll-y\"\n        overlayClassName=\"bi-modal-overlay\"\n        closeTimeoutMS={150}\n        isOpen={this.props.isOpen}\n        onRequestClose={this.props.onClose}\n      >\n        <button className=\"bi-modal__btn-close\" onClick={this.props.onClose}>\n          <CrossIcon className=\"bi-modal__btn-close-icon\" />\n        </button>\n\n        <div className=\"bi-payment-request-modal__title\">\n          <FormattedMessage id=\"components.payment-request-modal.title\" />\n\n          <div className=\"bi-payment-request-modal__subtitle\">\n            <FormattedMessage id=\"components.payment-request-modal.subtitle\" />\n          </div>\n        </div>\n\n        <div className=\"bi-payment-request-modal__form\">\n          <label className=\"bi-payment-request-modal__form-item g-flex\">\n            <span className=\"bi-payment-request-modal__label g-flex__item-fixed\">\n              <FormattedMessage id=\"components.payment-request-modal.amount\" />\n            </span>\n\n            <div className=\"bi-payment-request-modal__input-wrapper g-flex__item\">\n              <input\n                className=\"bi-payment-request-modal__input\"\n                type=\"number\"\n                onChange={this.setAmount}\n                min={0}\n              />\n\n              <span className=\"bi-payment-request-modal__input-currency\">\n                {environment.blockchain.coinName.toUpperCase()}\n              </span>\n            </div>\n          </label>\n\n          <label className=\"bi-payment-request-modal__form-item g-flex\">\n            <span className=\"bi-payment-request-modal__label bi-payment-request-modal__label--line\">\n              <FormattedMessage id=\"components.payment-request-modal.description\" />\n            </span>\n\n            <div className=\"bi-payment-request-modal__input-wrapper g-flex__item\">\n              <textarea\n                className=\"bi-payment-request-modal__input bi-payment-request-modal__input--textarea\"\n                onChange={this.setDescription}\n              />\n            </div>\n          </label>\n        </div>\n\n        <div className=\"bi-payment-request-modal__result g-flex\">\n          <div className=\"g-flex__item-fixed bi-payment-request-modal__qrcode\">\n            <QRCode value={link} size={156} />\n          </div>\n\n          <div className=\"g-flex__item-fixed bi-payment-request-modal__link g-flex-column\">\n            <div className=\"bi-payment-request-modal__link-header g-flex-column__item-fixed\">\n              <FormattedMessage id=\"components.payment-request-modal.link\" />:\n            </div>\n\n            <div\n              className=\"bi-payment-request-modal__link-body u-word-wrap g-scroll-y g-flex-column__item\"\n              onClick={this.selectLink}\n              ref={(ref: HTMLDivElement) => (this.link = ref)}\n            >\n              {link}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bi-payment-request-modal__footer g-flex-column__item g-flex\">\n          <button\n            className=\"bi-payment-request-modal__btn-copy bi-btn bi-btn--flat\"\n            onClick={this.copyLinkToClipboard}\n          >\n            {this.state.copied ? (\n              <FormattedMessage id=\"components.payment-request-modal.copied\" />\n            ) : (\n              <FormattedMessage id=\"components.payment-request-modal.copy\" />\n            )}\n          </button>\n        </div>\n      </ReactModal>\n    );\n  }\n\n  private getLink(): string {\n    const params = queryString.stringify({\n      address: this.props.address,\n      amount: this.state.amount,\n      description: this.state.description,\n    });\n\n    const host = environment.environments\n      ? environment.environments[0].url\n      : window.location.origin;\n\n    return `${host}/payment-request?${params}`;\n  }\n\n  private setAmount(event: React.ChangeEvent<HTMLInputElement>): void {\n    this.setState({\n      amount: parseInt(event.target.value, 10),\n    });\n  }\n\n  private setDescription(event: React.ChangeEvent<HTMLTextAreaElement>): void {\n    this.setState({\n      description: event.target.value,\n    });\n  }\n\n  private selectLink(): void {\n    (window.getSelection() as Selection).selectAllChildren(this.link);\n  }\n\n  private copyLinkToClipboard(): void {\n    this.selectLink();\n\n    document.execCommand('copy');\n    (window.getSelection() as Selection).removeAllRanges();\n\n    this.setState({\n      copied: true,\n    });\n\n    setTimeout(() => {\n      this.setState({\n        copied: false,\n      });\n    }, 1000);\n  }\n}\n\nexport const PaymentRequestModalComponent = withRouter(PaymentRequestModal);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { FullAddress } from '../../../models/generated/fullAddress';\n\nimport { PaymentRequestModalComponent } from '../../modals/payment-request-modal/payment-request-modal.component';\n\nimport '../address-actions/address-actions.scss';\n\ninterface AddressActionsState {\n  [key: string]: boolean;\n}\n\ninterface AddressActionsProps {\n  address: FullAddress;\n}\n\nexport const PAYMENT_REQUEST_MODAL_STATE_KEY = 'isPaymentRequestModalOpened';\n\nexport class AddressRequetsPaymentActionComponent extends React.Component<\n  AddressActionsProps,\n  AddressActionsState\n> {\n  state: AddressActionsState = {\n    [PAYMENT_REQUEST_MODAL_STATE_KEY]: false,\n  };\n\n  constructor(props: AddressActionsProps) {\n    super(props);\n\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-address-actions g-flex\">\n        <div className=\"bi-address-actions__item g-flex__item-fixed\">\n          <button\n            className=\"bi-address-actions__btn\"\n            onClick={this.openModal(PAYMENT_REQUEST_MODAL_STATE_KEY)}\n          >\n            <FormattedMessage id=\"components.address-actions.request-payment\" />\n          </button>\n        </div>\n\n        <PaymentRequestModalComponent\n          isOpen={this.state[PAYMENT_REQUEST_MODAL_STATE_KEY]}\n          onClose={this.closeModal(PAYMENT_REQUEST_MODAL_STATE_KEY)}\n          address={this.props.address.summary.id}\n        />\n      </div>\n    );\n  }\n\n  private openModal(stateKey: string): () => void {\n    return () => {\n      this.setState({\n        [stateKey]: true,\n      });\n    };\n  }\n\n  private closeModal(stateKey: string): () => void {\n    return () => {\n      this.setState({\n        [stateKey]: false,\n      });\n    };\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { FullAddressSummary } from '../../../models/generated/fullAddressSummary';\n\nimport './address-summary.scss';\n\ninterface IAddressSummaryProps {\n  summary: FullAddressSummary;\n}\n\nexport class AddressSummaryComponent extends React.Component<\n  IAddressSummaryProps\n> {\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-address-summary\">\n        <div className=\"bi-address-summary__header\">\n          <FormattedMessage id=\"components.address-summary.title\" />\n        </div>\n\n        <div className=\"bi-address-summary__body bi-table\">\n          <div className=\"bi-address-summary__row bi-table__row\">\n            <div className=\"bi-address-summary__cell bi-address-summary__cell--header bi-table__cell\">\n              <FormattedMessage id=\"components.address-summary.hash\" />\n            </div>\n\n            <div className=\"bi-address-summary__cell bi-address-summary__cell--value bi-table__cell u-word-wrap u-word-wrap--ellipsis\">\n              {this.props.summary.id}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { FullAddressTransactions } from '../../../models/generated/fullAddressTransactions';\n\nimport './address-transactions.scss';\n\nimport { CoinValueComponent } from '../../common/coin-value/coin-value.component';\n\ninterface AddressTransactionsProps {\n  summary: FullAddressTransactions;\n}\n\nexport class AddressTransactionsComponent extends React.Component<\n  AddressTransactionsProps\n> {\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-address-transactions\">\n        <div className=\"bi-address-transactions__header\">\n          <FormattedMessage id=\"components.address-transactions.title\" />\n        </div>\n\n        <div className=\"bi-address-transactions__body bi-table\">\n          <div className=\"bi-address-transactions__row bi-table__row\">\n            <div className=\"bi-address-transactions__cell bi-address-transactions__cell--header bi-table__cell\">\n              <FormattedMessage id=\"components.address-transactions.confirmed\" />\n            </div>\n\n            <div className=\"bi-address-transactions__cell bi-table__cell\">\n              {this.props.summary.confirmed}\n            </div>\n          </div>\n\n          <div className=\"bi-address-transactions__row bi-table__row\">\n            <div className=\"bi-address-transactions__cell bi-address-transactions__cell--header bi-table__cell\">\n              <FormattedMessage id=\"components.address-transactions.totalReceived\" />\n            </div>\n\n            <div className=\"bi-address-transactions__cell bi-table__cell\">\n              <CoinValueComponent value={this.props.summary.totalReceived} />\n            </div>\n          </div>\n\n          <div className=\"bi-address-transactions__row bi-table__row\">\n            <div className=\"bi-address-transactions__cell bi-address-transactions__cell--header bi-table__cell\">\n              <FormattedMessage id=\"components.address-transactions.confirmedBalance\" />\n            </div>\n\n            <div className=\"bi-address-transactions__cell bi-table__cell\">\n              <CoinValueComponent value={this.props.summary.confirmedBalance} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import queryString from 'query-string';\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router';\nimport { bindActionCreators } from 'redux';\n\nimport environment from '../../config/environment';\n\nimport './address.scss';\n\nimport { AppActions } from '../../actions/app.actions';\nimport { AddressState } from '../../reducers/address.reducer';\nimport { AppState } from '../../store/app.store';\n\nimport { AddressActions } from '../../actions/address.actions';\n\nimport { AddressQrcodeActionComponent } from '../../components/address/address-qrcode-action/address-qrcode-action.component';\nimport { AddressRequetsPaymentActionComponent } from '../../components/address/address-request-payment-action/address-requets-payment-action.component';\nimport { AddressSummaryComponent } from '../../components/address/address-summary/address-summary.component';\nimport { AddressTransactionsComponent } from '../../components/address/address-transactions/address-transactions.component';\nimport { PaginateSimpleComponent } from '../../components/common/paginate-simple/paginate-simple.component';\nimport { TransactionsComponent } from '../../components/transactions/transactions.component';\n\nclass Address extends React.PureComponent<\n  RouteComponentProps<{ id: string }> &\n    AddressState &\n    AddressActions &\n    AppActions\n> {\n  params: any;\n\n  constructor(props: any) {\n    super(props);\n\n    this.params = this.getParams();\n\n    this.getPageUrl = this.getPageUrl.bind(this);\n  }\n\n  componentDidMount(): void {\n    if (this.props.preloaded) {\n      this.props.clearPreloadedState();\n\n      return;\n    }\n\n    this.props.getAddress(this.props.match.params.id);\n    this.props.getAddressTransactions(this.props.match.params.id, this.params);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: any): void {\n    const params = this.getParams();\n\n    if (this.props.match.params.id !== nextProps.match.params.id) {\n      this.params = params;\n\n      this.props.getAddress(nextProps.match.params.id);\n      this.props.getAddressTransactions(nextProps.match.params.id, this.params);\n\n      return;\n    }\n\n    if (JSON.stringify(params) !== JSON.stringify(this.params)) {\n      this.params = params;\n\n      this.props.getAddressTransactions(\n        this.props.match.params.id,\n        this.params\n      );\n    }\n  }\n\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-address g-flex-column__item-fixed\">\n        <div className=\"bi-address__header\">\n          <div className=\"bi-address__title\">\n            <FormattedMessage\n              id=\"components.address.title\"\n              values={{\n                coinName: environment.blockchain.coinName.toUpperCase(),\n              }}\n            />\n          </div>\n        </div>\n\n        {this.renderBody()}\n      </div>\n    );\n  }\n\n  private renderBody(): JSX.Element | null {\n    if (this.props.fetching) {\n      return <p className=\"bi-address__fetching-text\">Fetching data...</p>;\n    }\n\n    if (!this.props.address || this.props.fetching) {\n      return null;\n    }\n\n    return (\n      <div className=\"bi-address__body\">\n        <FormattedMessage\n          id=\"common.pages.address.title\"\n          values={{ id: this.props.address.summary.id }}\n        >\n          {(title) => (\n            <Helmet>\n              <title>{title}</title>\n            </Helmet>\n          )}\n        </FormattedMessage>\n\n        <div className=\"bi-address__tables g-flex\">\n          <div className=\"bi-address__table g-flex__item\">\n            <AddressSummaryComponent summary={this.props.address.summary} />\n            <AddressQrcodeActionComponent address={this.props.address} />\n          </div>\n\n          <div className=\"bi-address__table g-flex__item\">\n            <AddressTransactionsComponent\n              summary={this.props.address.transactions}\n            />\n\n            <AddressRequetsPaymentActionComponent\n              address={this.props.address}\n            />\n          </div>\n        </div>\n\n        {this.props.transactions && (\n          <div className=\"bi-address__transactions\">\n            {!this.props.transactionFetching && (\n              <TransactionsComponent\n                transactions={this.props.transactions.items}\n                address={this.props.address.summary.id}\n              />\n            )}\n\n            <div className=\"bi-address__transactions-footer g-flex\">\n              <PaginateSimpleComponent\n                total={this.props.transactions.total}\n                limit={this.params.limit}\n                getPageUrl={this.getPageUrl}\n                forcePage={Math.floor(this.params.offset / this.params.limit)}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  private getPageUrl(page: number): string {\n    const params: any = queryString.parse(this.props.history.location.search);\n\n    params.offset = page * this.params.limit;\n\n    return `${this.props.location.pathname}?${queryString.stringify(params)}`;\n  }\n\n  private getParams(): any {\n    let { offset, limit }: any = queryString.parse(\n      this.props.history.location.search\n    );\n\n    offset = parseInt(offset, 10);\n    limit = parseInt(limit, 10) || 30;\n\n    return {\n      limit,\n      offset: offset || 0,\n    };\n  }\n}\n\nfunction mapStateToProps(state: AppState): AddressState {\n  return state.address;\n}\n\nfunction mapDispatchToProps(dispatch: any): any {\n  return bindActionCreators({ ...AddressActions, ...AppActions }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Address);\n"],"sourceRoot":""}