{"version":3,"sources":["constants/struct.types.ts","utils/fetchStruct.ts","components/common/paginate-simple/paginate-simple.component.tsx","components/common/limit-selector/limit-selector.component.tsx","services/issuedToken.api.service.ts","actions/issuedTokens.actions.ts","selectors/issuedTokens.ts","components/issued-tokens-table/issued-tokens-table/issued-tokens-table-header.component.tsx","components/issued-tokens-table/issued-tokens-table.component.tsx","pages/issued-tokens/issued-tokens.component.tsx"],"names":["SEARCH_TOKEN_BY_ID_STRUCT","UNSPENT_SELL_ORDERS_BY_TOKEN_ID_STRUCT","UNSPENT_BUY_ORDERS_BY_TOKEN_ID_STRUCT","GET_ALL_ISSUED_TOKENS_STRUCT","GET_TOTAL_ISSUED_TOKENS_STRUCT","GET_ISSUED_TOKENS_BY_ID_STRUCT","GET_UNCONFIRMED_TRANSACTIONS_STRUCT","GET_UNCONFIRMED_TRANSACTION_STRUCT","GET_ORACLE_POOL_DATA_STRUCT","GET_ADDRESSES_BALANCES_STRUCT","fetchStruct","dispatch","structId","method","url","params","startStructFetch","axios","then","res","body","data","result","stopStructFetch","Promise","resolve","error","errors","Error","reject","catch","PaginateSimpleComponent","props","pageCount","Math","ceil","this","total","limit","className","forcePage","disabled","to","getPageUrl","id","values","current","React","Component","LimitSelectorComponent","label","items","map","item","index","selectorItemClassNames","classNames","selected","key","getLimitLink","PureComponent","IssuedTokensService","offset","tokenId","apiUrl","environment","IssuedTokensActions","getTokens","getAllIssuedTokens","payload","type","GET_TOKENS_SUCCESS","getTokensById","getIssuedTokensById","tokensById","GET_TOKENS_BY_ID_SUCCESS","GET_TOKENS_BY_ID_FAIL","getAllIssuedTokensStructSelector","state","getStruct","IssuedTokensTableHeader","IssuedTokensTableHeaderComponent","withRouter","IssuedTokensTableComponent","tokens","renderTable","token","value","readOnly","name","format","integerSeparator","emissionAmount","decimals","description","IssuedTokens","bind","getParams","reloadTokens","JSON","stringify","title","isFetching","length","floor","page","queryString","parse","history","location","search","Object","keys","forEach","push","parseInt","IssuedTokensComponent","connect","bindActionCreators"],"mappings":"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","file":"static/js/12.f4e2fe8b.chunk.js","sourcesContent":["export const SEARCH_TOKEN_BY_ID_STRUCT = 'assets/tokenid/issuingBox';\n\nexport const UNSPENT_SELL_ORDERS_BY_TOKEN_ID_STRUCT =\n  '/dex/tokens/tokenid/unspentSellOrders';\n\nexport const UNSPENT_BUY_ORDERS_BY_TOKEN_ID_STRUCT =\n  '/dex/tokens/tokenid/unspentBuyOrders';\n\nexport const GET_ALL_ISSUED_TOKENS_STRUCT = '/assets/issuingBoxes';\n\nexport const GET_TOTAL_ISSUED_TOKENS_STRUCT = '/assets/issuingBoxes/total';\n\nexport const GET_ISSUED_TOKENS_BY_ID_STRUCT = 'assets/id:/issuingBoxes';\n\nexport const GET_OPENAPI_YAML_STRUCT = '/docs/openapi';\n\nexport const GET_UNCONFIRMED_TRANSACTIONS_STRUCT = '/transactions/unconfirmed';\n\nexport const GET_UNCONFIRMED_TRANSACTION_STRUCT =\n  '/transactions/unconfirmed/:id';\n\nexport const GET_ORACLE_POOL_DATA_STRUCT = 'oracle/frontendData';\n\nexport const GET_ADDRESSES_BALANCES_STRUCT = 'addresses/balances';\n","import { stopStructFetch, startStructFetch } from 'redux-struct';\nimport axios from 'axios';\n\nexport const fetchStruct = (\n  dispatch: any,\n  structId: string,\n  method: string,\n  url: string,\n  params: any = null\n) => {\n  dispatch(startStructFetch(structId));\n\n  return axios[method](url, params)\n    .then((res: any) => res.body || res.data)\n    .then((result: any) => {\n      if (!result) {\n        dispatch(stopStructFetch(structId, result));\n\n        return Promise.resolve(result);\n      }\n\n      const error = result.errors || result.error;\n\n      if (error) {\n        dispatch(stopStructFetch(structId, new Error(error)));\n\n        return Promise.reject(new Error(error));\n      }\n\n      dispatch(stopStructFetch(structId, result));\n\n      return Promise.resolve(result);\n    })\n    .catch((error: Error) => {\n      dispatch(stopStructFetch(structId, error));\n\n      return Promise.reject(error);\n    });\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router-dom';\n\nimport './paginate-simple.scss';\n\nimport { ArrowIcon, DoubleArrowIcon } from '../icons/common.icons';\n\ninterface IPaginateSimpleProps {\n  total: number;\n  limit: number;\n  forcePage: number;\n  getPageUrl: (page: number) => string;\n}\n\nexport class PaginateSimpleComponent extends React.Component<\n  IPaginateSimpleProps\n> {\n  constructor(props: IPaginateSimpleProps) {\n    super(props);\n  }\n\n  render(): JSX.Element | null {\n    const pageCount = Math.ceil(this.props.total / this.props.limit);\n\n    if (!pageCount) {\n      return null;\n    }\n\n    return (\n      <div className=\"bi-paginate-simple\">\n        {this.props.forcePage === 0 ? (\n          <button\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--prev bi-btn bi-btn--flat\"\n            disabled={true}\n          >\n            <DoubleArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </button>\n        ) : (\n          <Link\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--prev bi-btn bi-btn--flat\"\n            to={this.props.getPageUrl(0)}\n          >\n            <DoubleArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </Link>\n        )}\n\n        {this.props.forcePage === 0 ? (\n          <button\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--prev bi-btn bi-btn--flat\"\n            disabled={true}\n          >\n            <ArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </button>\n        ) : (\n          <Link\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--prev bi-btn--flat\"\n            to={this.props.getPageUrl(this.props.forcePage - 1)}\n          >\n            <ArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </Link>\n        )}\n\n        <span className=\"bi-paginate-simple__status\">\n          <FormattedMessage\n            id=\"components.paginate-simple.page-of\"\n            values={{ current: this.props.forcePage + 1, total: pageCount }}\n          />\n        </span>\n\n        <span className=\"bi-paginate-simple__status bi-paginate-simple__status--mobile\">\n          <FormattedMessage\n            id=\"components.paginate-simple.page\"\n            values={{ current: this.props.forcePage + 1 }}\n          />\n        </span>\n\n        {this.props.forcePage === pageCount - 1 ? (\n          <button\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--next bi-btn bi-btn--flat\"\n            disabled={true}\n          >\n            <ArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </button>\n        ) : (\n          <Link\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--next bi-btn--flat\"\n            to={this.props.getPageUrl(this.props.forcePage + 1)}\n          >\n            <ArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </Link>\n        )}\n\n        {this.props.forcePage === pageCount - 1 ? (\n          <button\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--next bi-btn bi-btn--flat\"\n            disabled={true}\n          >\n            <DoubleArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </button>\n        ) : (\n          <Link\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--next bi-btn--flat\"\n            to={this.props.getPageUrl(pageCount - 1)}\n          >\n            <DoubleArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </Link>\n        )}\n      </div>\n    );\n  }\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './limit-selector.scss';\n\ninterface ILimitSelectorProps {\n  label: string | JSX.Element;\n  items: number[];\n  selected: number;\n  getLimitLink: (limit: number) => string;\n}\n\nexport class LimitSelectorComponent extends React.PureComponent<\n  ILimitSelectorProps\n> {\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-limit-selector\">\n        <span className=\"bi-limit-selector__label\">{this.props.label}</span>\n\n        {this.props.items.map((item, index) => {\n          const selectorItemClassNames = classNames({\n            'bi-btn': true,\n            'bi-btn--flat': true,\n            'bi-limit-selector__item': true,\n            'bi-limit-selector__item--selected': item === this.props.selected,\n          });\n\n          return (\n            <Link\n              className={selectorItemClassNames}\n              key={index}\n              to={this.props.getLimitLink(item)}\n            >\n              {item}\n            </Link>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import environment from '../config/environment';\nimport { fetchStruct } from '../utils/fetchStruct';\nimport {\n  GET_ALL_ISSUED_TOKENS_STRUCT,\n  GET_TOTAL_ISSUED_TOKENS_STRUCT,\n  GET_ISSUED_TOKENS_BY_ID_STRUCT,\n} from '../constants/struct.types';\n\nexport class IssuedTokensService {\n  static get apiUrl(): string {\n    return `${environment.apiUrl}`;\n  }\n\n  static getAllIssuedTokens(dispatch: any, { limit, offset }: any): any {\n    return fetchStruct(\n      dispatch,\n      GET_ALL_ISSUED_TOKENS_STRUCT,\n      'get',\n      `https://api.ergoplatform.com/api/v1/assets`,\n      {\n        params: {\n          limit,\n          offset,\n        },\n      }\n    );\n  }\n\n  static getTotalIssuedTokens(dispatch: any, { limit }: any): any {\n    return fetchStruct(\n      dispatch,\n      GET_TOTAL_ISSUED_TOKENS_STRUCT,\n      'get',\n      `https://api.ergoplatform.com/api/v1/assets`,\n      {\n        params: {\n          limit,\n        },\n      }\n    );\n  }\n\n  static getIssuedTokensById(dispatch: any, tokenId: string): any {\n    return fetchStruct(\n      dispatch,\n      GET_ISSUED_TOKENS_BY_ID_STRUCT,\n      'get',\n      `${IssuedTokensService.apiUrl}/assets/${tokenId}/issuingBox`\n    );\n  }\n}\n","import { ActionCreatorsMapObject } from 'redux';\nimport { IssuedTokensService } from '../services/issuedToken.api.service';\nimport {\n  GET_TOKENS_SUCCESS,\n  GET_TOKENS_BY_ID_SUCCESS,\n  GET_TOKENS_BY_ID_FAIL,\n} from '../constants/tokens.types';\n\nexport interface IssuedTokensActions extends ActionCreatorsMapObject {\n  getTokens: (params: any) => any;\n}\n\nexport const IssuedTokensActions: IssuedTokensActions = {\n  getTokens(params: any) {\n    return (dispatch: any) => {\n      return IssuedTokensService.getAllIssuedTokens(dispatch, params).then(\n        (data: any) => {\n          dispatch({\n            payload: {\n              offset: params.offset || 0,\n            },\n            type: GET_TOKENS_SUCCESS,\n          });\n        }\n      );\n    };\n  },\n  getTokensById(tokenId: string) {\n    return (dispatch: any) => {\n      return IssuedTokensService.getIssuedTokensById(dispatch, tokenId)\n        .then((data: any) => {\n          dispatch({\n            payload: {\n              tokensById: data,\n            },\n            type: GET_TOKENS_BY_ID_SUCCESS,\n          });\n        })\n        .catch(() => {\n          dispatch({\n            type: GET_TOKENS_BY_ID_FAIL,\n          });\n        });\n    };\n  },\n};\n","import { getStruct } from 'redux-struct';\nimport {\n  GET_ALL_ISSUED_TOKENS_STRUCT,\n  GET_TOTAL_ISSUED_TOKENS_STRUCT,\n} from '../constants/struct.types';\n\nexport const getAllIssuedTokensStructSelector = (state: any) =>\n  getStruct(GET_ALL_ISSUED_TOKENS_STRUCT)(state);\n\nexport const getTotalIssuedTokensStructSelector = (state: any) =>\n  getStruct(GET_TOTAL_ISSUED_TOKENS_STRUCT)(state);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\n\nimport './issued-tokens-table-header.scss';\n\nclass IssuedTokensTableHeader extends React.Component<\n  RouteComponentProps<any>\n> {\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-blocks-table-header bi-blocks-table__row bi-table__row\">\n        <div className=\"bi-blocks-table__cell bi-table__cell\">\n          <FormattedMessage id=\"common.token.id\" />\n        </div>\n\n        <div className=\"bi-blocks-table__cell bi-table__cell\">\n          <FormattedMessage id=\"common.token.name\" />\n        </div>\n\n        <div className=\"bi-blocks-table__cell bi-table__cell\">\n          <FormattedMessage id=\"common.token.amount\" />\n        </div>\n\n        <div className=\"bi-blocks-table__cell bi-table__cell\">\n          <FormattedMessage id=\"common.token.decimals\" />\n        </div>\n\n        <div className=\"bi-blocks-table__cell bi-table__cell\">\n          <FormattedMessage id=\"common.token.description\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const IssuedTokensTableHeaderComponent = withRouter(\n  IssuedTokensTableHeader\n);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport format from 'format-number';\n// import * as vlq from 'vlq';\n\nimport { IssuedTokensTableHeaderComponent } from './issued-tokens-table/issued-tokens-table-header.component';\n\nimport './issued-tokens-table.scss';\n\ninterface IssuedTokensTableProps {\n  tokens: any[];\n  isFetching: boolean;\n}\n\nexport class IssuedTokensTableComponent extends React.Component<\n  IssuedTokensTableProps\n> {\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-blocks-table\">\n        {!this.props.tokens ? null : this.renderTable()}\n      </div>\n    );\n  }\n\n  private renderTable(): JSX.Element {\n    return (\n      <div className=\"bi-blocks-table__body bi-table\">\n        <IssuedTokensTableHeaderComponent />\n\n        {this.props.tokens.map((token) => {\n          return (\n            <div className=\"bi-blocks-table__row bi-table__row\" key={token.id}>\n              <div className=\"bi-blocks-table__cell bi-table__cell bi-tokens-table__cell\">\n                <div className=\"bi-blocks-table__cell-name bi-tokens-table__cell-name\">\n                  <FormattedMessage id=\"common.token.id\" />\n                </div>\n\n                <input\n                  className=\"bi-tokens-table__input\"\n                  type=\"text\"\n                  value={token.id}\n                  readOnly\n                />\n              </div>\n\n              <div className=\"bi-blocks-table__cell bi-table__cell  bi-tokens-table__cell\">\n                <div className=\"bi-blocks-table__cell-name bi-tokens-table__cell-name\">\n                  <FormattedMessage id=\"common.token.name\" />\n                </div>\n\n                {token.name}\n              </div>\n\n              <div className=\"bi-blocks-table__cell bi-table__cell bi-tokens-table__cell\">\n                <div className=\"bi-blocks-table__cell-name bi-tokens-table__cell-name\">\n                  <FormattedMessage id=\"common.token.amount\" />\n                </div>\n\n                <input\n                  className=\"bi-tokens-table__input\"\n                  type=\"text\"\n                  value={format({ integerSeparator: ' ' })(\n                    token.emissionAmount\n                  )}\n                  readOnly\n                />\n              </div>\n\n              <div className=\"bi-blocks-table__cell bi-table__cell bi-tokens-table__cell\">\n                <div className=\"bi-blocks-table__cell-name bi-tokens-table__cell-name\">\n                  <FormattedMessage id=\"common.token.decimals\" />\n                </div>\n\n                {token.decimals}\n              </div>\n\n              <div className=\"bi-blocks-table__cell bi-table__cell bi-tokens-table__cell\">\n                <div className=\"bi-blocks-table__cell-name bi-tokens-table__cell-name\">\n                  <FormattedMessage id=\"common.token.description\" />\n                </div>\n\n                {token.description}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import queryString from 'query-string';\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router';\nimport { bindActionCreators } from 'redux';\n\nimport './issued-tokens.scss';\n\nimport { AppState } from '../../store/app.store';\n\nimport { IGetBlocksParams } from '../../services/block.api.service';\n\nimport { LimitSelectorComponent } from '../../components/common/limit-selector/limit-selector.component';\nimport { PaginateSimpleComponent } from '../../components/common/paginate-simple/paginate-simple.component';\nimport { IssuedTokensActions } from '../../actions/issuedTokens.actions';\nimport { getAllIssuedTokensStructSelector } from '../../selectors/issuedTokens';\nimport { IssuedTokensTableComponent } from '../../components/issued-tokens-table/issued-tokens-table.component';\n\ntype IDataProps = AppState &\n  IssuedTokensActions &\n  RouteComponentProps<{}> & {\n    tokens: any;\n    offset: number;\n  };\n\nclass IssuedTokens extends React.PureComponent<IDataProps> {\n  params: any;\n\n  constructor(props: any) {\n    super(props);\n\n    this.getPageUrl = this.getPageUrl.bind(this);\n    this.getLimitLink = this.getLimitLink.bind(this);\n\n    this.params = this.getParams();\n  }\n\n  componentDidMount(): void {\n    this.reloadTokens(this.params);\n  }\n\n  UNSAFE_componentWillReceiveProps(props: IDataProps): void {\n    const params = this.getParams();\n\n    if (JSON.stringify(params) !== JSON.stringify(this.params)) {\n      this.params = params;\n\n      this.reloadTokens(this.params);\n    }\n  }\n\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-data g-flex-column g-flex-column__item-fixed\">\n        <FormattedMessage id=\"common.pages.issued-tokens.title\">\n          {(title) => (\n            <Helmet>\n              <title>{title}</title>\n            </Helmet>\n          )}\n        </FormattedMessage>\n\n        <div className=\"bi-data__header g-flex-column__item-fixed g-flex\">\n          <div className=\"bi-data__title g-flex__item\">\n            <FormattedMessage id=\"components.issued-tokens.title\" />\n          </div>\n        </div>\n\n        {this.props.tokens.isFetching && (\n          <p className=\"base-text\">Fetching Data...</p>\n        )}\n\n        {this.props.tokens.data && this.props.tokens.data.total === 0 && (\n          <div className=\"bi-data__body g-flex-column__item-fixed\">\n            <FormattedMessage id=\"components.data.wrong-query\" />\n          </div>\n        )}\n\n        {!this.props.tokens.isFetching &&\n          this.props.tokens.data !== null &&\n          this.props.tokens.data.items.length > 0 && (\n            <div className=\"bi-data__body g-flex-column__item-fixed\">\n              <IssuedTokensTableComponent\n                tokens={this.props.tokens.data.items}\n                isFetching={this.props.tokens.isFetching}\n              />\n            </div>\n          )}\n\n        {this.props.tokens.data !== null &&\n          this.props.tokens.data.items.length > 0 && (\n            <div className=\"bi-data__footer g-flex-column__item-fixed g-flex\">\n              <div className=\"g-flex__item-fixed\">\n                <LimitSelectorComponent\n                  items={[30, 60, 120]}\n                  selected={this.params.limit}\n                  label={<FormattedMessage id=\"components.data.show\" />}\n                  getLimitLink={this.getLimitLink}\n                />\n              </div>\n\n              <div className=\"g-flex__item-fixed\">\n                <PaginateSimpleComponent\n                  total={this.props.tokens.data.total}\n                  limit={this.params.limit}\n                  getPageUrl={this.getPageUrl}\n                  forcePage={Math.floor(this.props.offset / this.params.limit)}\n                />\n              </div>\n            </div>\n          )}\n      </div>\n    );\n  }\n\n  private getPageUrl(page: number): string {\n    const params: any = queryString.parse(this.props.history.location.search);\n\n    params.offset = page * this.params.limit;\n\n    return `/issued-tokens?${queryString.stringify(params)}`;\n  }\n\n  private getLimitLink(limit: number): string {\n    const params: any = queryString.parse(this.props.history.location.search);\n\n    params.limit = limit;\n\n    return `/issued-tokens?${queryString.stringify(params)}`;\n  }\n\n  private reloadTokens(params: IGetBlocksParams): void {\n    params = {\n      ...this.params,\n      ...params,\n      limit: params.limit || 30,\n      offset: params.offset || 0,\n    };\n\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null) {\n        delete params[key];\n      }\n    });\n\n    this.props.getTokens(params);\n\n    if (params.offset === 0) {\n      delete params.offset;\n    }\n\n    if (params.limit === 30) {\n      delete params.limit;\n    }\n\n    this.props.history.push(`/issued-tokens?${queryString.stringify(params)}`);\n  }\n\n  private getParams(): any {\n    let { offset, limit }: any = queryString.parse(\n      this.props.history.location.search\n    );\n\n    offset = parseInt(offset, 10);\n    limit = parseInt(limit, 10) || 30;\n\n    return {\n      limit,\n      offset: offset || 0,\n    };\n  }\n}\n\nconst mapStateToProps = (state: any): any => ({\n  tokens: getAllIssuedTokensStructSelector(state),\n  offset: state.tokens.offset,\n});\n\nconst mapDispatchToProps = (dispatch: any): any => {\n  return bindActionCreators({ ...IssuedTokensActions }, dispatch);\n};\n\nconst IssuedTokensComponent = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(IssuedTokens);\n\nexport default IssuedTokensComponent;\n"],"sourceRoot":""}